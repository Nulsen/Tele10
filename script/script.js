var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(e,t){"use strict";"object"==("undefined"==typeof module?"undefined":_typeof(module))&&"object"==_typeof(module.exports)?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){"use strict";function n(e,t){t=t||ne;var n=t.createElement("script");n.text=e,t.head.appendChild(n).parentNode.removeChild(n)}function i(e){var t=!!e&&"length"in e&&e.length,n=ge.type(e);return"function"!==n&&!ge.isWindow(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}function r(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}function o(e,t,n){return ge.isFunction(t)?ge.grep(e,function(e,i){return!!t.call(e,i,e)!==n}):t.nodeType?ge.grep(e,function(e){return e===t!==n}):"string"!=typeof t?ge.grep(e,function(e){return ae.call(t,e)>-1!==n}):xe.test(t)?ge.filter(t,e,n):(t=ge.filter(t,e),ge.grep(e,function(e){return ae.call(t,e)>-1!==n&&1===e.nodeType}))}function s(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function a(e){var t={};return ge.each(e.match(Ne)||[],function(e,n){t[n]=!0}),t}function l(e){return e}function u(e){throw e}function c(e,t,n,i){var r;try{e&&ge.isFunction(r=e.promise)?r.call(e).done(t).fail(n):e&&ge.isFunction(r=e.then)?r.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}function f(){ne.removeEventListener("DOMContentLoaded",f),e.removeEventListener("load",f),ge.ready()}function d(){this.expando=ge.expando+d.uid++}function h(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:We.test(e)?JSON.parse(e):e)}function p(e,t,n){var i;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Fe,"-$&").toLowerCase(),n=e.getAttribute(i),"string"==typeof n){try{n=h(n)}catch(r){}Re.set(e,t,n)}else n=void 0;return n}function g(e,t,n,i){var r,o=1,s=20,a=i?function(){return i.cur()}:function(){return ge.css(e,t,"")},l=a(),u=n&&n[3]||(ge.cssNumber[t]?"":"px"),c=(ge.cssNumber[t]||"px"!==u&&+l)&&qe.exec(ge.css(e,t));if(c&&c[3]!==u){u=u||c[3],n=n||[],c=+l||1;do o=o||".5",c/=o,ge.style(e,t,c+u);while(o!==(o=a()/l)&&1!==o&&--s)}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=r)),r}function m(e){var t,n=e.ownerDocument,i=e.nodeName,r=$e[i];return r?r:(t=n.body.appendChild(n.createElement(i)),r=ge.css(t,"display"),t.parentNode.removeChild(t),"none"===r&&(r="block"),$e[i]=r,r)}function v(e,t){for(var n,i,r=[],o=0,s=e.length;o<s;o++)i=e[o],i.style&&(n=i.style.display,t?("none"===n&&(r[o]=Pe.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&Ve(i)&&(r[o]=m(i))):"none"!==n&&(r[o]="none",Pe.set(i,"display",n)));for(o=0;o<s;o++)null!=r[o]&&(e[o].style.display=r[o]);return e}function y(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&r(e,t)?ge.merge([e],n):n}function _(e,t){for(var n=0,i=e.length;n<i;n++)Pe.set(e[n],"globalEval",!t||Pe.get(t[n],"globalEval"))}function T(e,t,n,i,r){for(var o,s,a,l,u,c,f=t.createDocumentFragment(),d=[],h=0,p=e.length;h<p;h++)if(o=e[h],o||0===o)if("object"===ge.type(o))ge.merge(d,o.nodeType?[o]:o);else if(Xe.test(o)){for(s=s||f.appendChild(t.createElement("div")),a=(Ke.exec(o)||["",""])[1].toLowerCase(),l=ze[a]||ze._default,s.innerHTML=l[1]+ge.htmlPrefilter(o)+l[2],c=l[0];c--;)s=s.lastChild;ge.merge(d,s.childNodes),s=f.firstChild,s.textContent=""}else d.push(t.createTextNode(o));for(f.textContent="",h=0;o=d[h++];)if(i&&ge.inArray(o,i)>-1)r&&r.push(o);else if(u=ge.contains(o.ownerDocument,o),s=y(f.appendChild(o),"script"),u&&_(s),n)for(c=0;o=s[c++];)Ge.test(o.type||"")&&n.push(o);return f}function E(){return!0}function w(){return!1}function b(){try{return ne.activeElement}catch(e){}}function C(e,t,n,i,r,o){var s,a;if("object"==("undefined"==typeof t?"undefined":_typeof(t))){"string"!=typeof n&&(i=i||n,n=void 0);for(a in t)C(e,a,n,i,t[a],o);return e}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),r===!1)r=w;else if(!r)return e;return 1===o&&(s=r,r=function(e){return ge().off(e),s.apply(this,arguments)},r.guid=s.guid||(s.guid=ge.guid++)),e.each(function(){ge.event.add(this,t,r,i,n)})}function x(e,t){return r(e,"table")&&r(11!==t.nodeType?t:t.firstChild,"tr")?ge(">tbody",e)[0]||e:e}function A(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function S(e){var t=rt.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function D(e,t){var n,i,r,o,s,a,l,u;if(1===t.nodeType){if(Pe.hasData(e)&&(o=Pe.access(e),s=Pe.set(t,o),u=o.events)){delete s.handle,s.events={};for(r in u)for(n=0,i=u[r].length;n<i;n++)ge.event.add(t,r,u[r][n])}Re.hasData(e)&&(a=Re.access(e),l=ge.extend({},a),Re.set(t,l))}}function I(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Qe.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function O(e,t,i,r){t=oe.apply([],t);var o,s,a,l,u,c,f=0,d=e.length,h=d-1,p=t[0],g=ge.isFunction(p);if(g||d>1&&"string"==typeof p&&!he.checkClone&&it.test(p))return e.each(function(n){var o=e.eq(n);g&&(t[0]=p.call(this,n,o.html())),O(o,t,i,r)});if(d&&(o=T(t,e[0].ownerDocument,!1,e,r),s=o.firstChild,1===o.childNodes.length&&(o=s),s||r)){for(a=ge.map(y(o,"script"),A),l=a.length;f<d;f++)u=o,f!==h&&(u=ge.clone(u,!0,!0),l&&ge.merge(a,y(u,"script"))),i.call(e[f],u,f);if(l)for(c=a[a.length-1].ownerDocument,ge.map(a,S),f=0;f<l;f++)u=a[f],Ge.test(u.type||"")&&!Pe.access(u,"globalEval")&&ge.contains(c,u)&&(u.src?ge._evalUrl&&ge._evalUrl(u.src):n(u.textContent.replace(ot,""),c))}return e}function N(e,t,n){for(var i,r=t?ge.filter(t,e):e,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||ge.cleanData(y(i)),i.parentNode&&(n&&ge.contains(i.ownerDocument,i)&&_(y(i,"script")),i.parentNode.removeChild(i));return e}function k(e,t,n){var i,r,o,s,a=e.style;return n=n||lt(e),n&&(s=n.getPropertyValue(t)||n[t],""!==s||ge.contains(e.ownerDocument,e)||(s=ge.style(e,t)),!he.pixelMarginRight()&&at.test(s)&&st.test(t)&&(i=a.width,r=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=n.width,a.width=i,a.minWidth=r,a.maxWidth=o)),void 0!==s?s+"":s}function L(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function H(e){if(e in pt)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=ht.length;n--;)if(e=ht[n]+t,e in pt)return e}function j(e){var t=ge.cssProps[e];return t||(t=ge.cssProps[e]=H(e)||e),t}function P(e,t,n){var i=qe.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function R(e,t,n,i,r){var o,s=0;for(o=n===(i?"border":"content")?4:"width"===t?1:0;o<4;o+=2)"margin"===n&&(s+=ge.css(e,n+Be[o],!0,r)),i?("content"===n&&(s-=ge.css(e,"padding"+Be[o],!0,r)),"margin"!==n&&(s-=ge.css(e,"border"+Be[o]+"Width",!0,r))):(s+=ge.css(e,"padding"+Be[o],!0,r),"padding"!==n&&(s+=ge.css(e,"border"+Be[o]+"Width",!0,r)));return s}function W(e,t,n){var i,r=lt(e),o=k(e,t,r),s="border-box"===ge.css(e,"boxSizing",!1,r);return at.test(o)?o:(i=s&&(he.boxSizingReliable()||o===e.style[t]),"auto"===o&&(o=e["offset"+t[0].toUpperCase()+t.slice(1)]),o=parseFloat(o)||0,o+R(e,t,n||(s?"border":"content"),i,r)+"px")}function F(e,t,n,i,r){return new F.prototype.init(e,t,n,i,r)}function M(){mt&&(ne.hidden===!1&&e.requestAnimationFrame?e.requestAnimationFrame(M):e.setTimeout(M,ge.fx.interval),ge.fx.tick())}function q(){return e.setTimeout(function(){gt=void 0}),gt=ge.now()}function B(e,t){var n,i=0,r={height:e};for(t=t?1:0;i<4;i+=2-t)n=Be[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function V(e,t,n){for(var i,r=(Q.tweeners[t]||[]).concat(Q.tweeners["*"]),o=0,s=r.length;o<s;o++)if(i=r[o].call(n,t,e))return i}function U(e,t,n){var i,r,o,s,a,l,u,c,f="width"in t||"height"in t,d=this,h={},p=e.style,g=e.nodeType&&Ve(e),m=Pe.get(e,"fxshow");n.queue||(s=ge._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,ge.queue(e,"fx").length||s.empty.fire()})}));for(i in t)if(r=t[i],vt.test(r)){if(delete t[i],o=o||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!m||void 0===m[i])continue;g=!0}h[i]=m&&m[i]||ge.style(e,i)}if(l=!ge.isEmptyObject(t),l||!ge.isEmptyObject(h)){f&&1===e.nodeType&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],u=m&&m.display,null==u&&(u=Pe.get(e,"display")),c=ge.css(e,"display"),"none"===c&&(u?c=u:(v([e],!0),u=e.style.display||u,c=ge.css(e,"display"),v([e]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===ge.css(e,"float")&&(l||(d.done(function(){p.display=u}),null==u&&(c=p.display,u="none"===c?"":c)),p.display="inline-block")),n.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]})),l=!1;for(i in h)l||(m?"hidden"in m&&(g=m.hidden):m=Pe.access(e,"fxshow",{display:u}),o&&(m.hidden=!g),g&&v([e],!0),d.done(function(){g||v([e]),Pe.remove(e,"fxshow");for(i in h)ge.style(e,i,h[i])})),l=V(g?m[i]:0,i,d),i in m||(m[i]=l.start,g&&(l.end=l.start,l.start=0))}}function $(e,t){var n,i,r,o,s;for(n in e)if(i=ge.camelCase(n),r=t[i],o=e[n],Array.isArray(o)&&(r=o[1],o=e[n]=o[0]),n!==i&&(e[i]=o,delete e[n]),s=ge.cssHooks[i],s&&"expand"in s){o=s.expand(o),delete e[i];for(n in o)n in e||(e[n]=o[n],t[n]=r)}else t[i]=r}function Q(e,t,n){var i,r,o=0,s=Q.prefilters.length,a=ge.Deferred().always(function(){delete l.elem}),l=function f(){if(r)return!1;for(var t=gt||q(),n=Math.max(0,u.startTime+u.duration-t),i=n/u.duration||0,o=1-i,s=0,f=u.tweens.length;s<f;s++)u.tweens[s].run(o);return a.notifyWith(e,[u,o,n]),o<1&&f?n:(f||a.notifyWith(e,[u,1,0]),a.resolveWith(e,[u]),!1)},u=a.promise({elem:e,props:ge.extend({},t),opts:ge.extend(!0,{specialEasing:{},easing:ge.easing._default},n),originalProperties:t,originalOptions:n,startTime:gt||q(),duration:n.duration,tweens:[],createTween:function(t,n){var i=ge.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(i),i},stop:function(t){var n=0,i=t?u.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)u.tweens[n].run(1);return t?(a.notifyWith(e,[u,1,0]),a.resolveWith(e,[u,t])):a.rejectWith(e,[u,t]),this}}),c=u.props;for($(c,u.opts.specialEasing);o<s;o++)if(i=Q.prefilters[o].call(u,e,c,u.opts))return ge.isFunction(i.stop)&&(ge._queueHooks(u.elem,u.opts.queue).stop=ge.proxy(i.stop,i)),i;return ge.map(c,V,u),ge.isFunction(u.opts.start)&&u.opts.start.call(e,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),ge.fx.timer(ge.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u}function K(e){var t=e.match(Ne)||[];return t.join(" ")}function G(e){return e.getAttribute&&e.getAttribute("class")||""}function z(e,t,n,i){var r;if(Array.isArray(t))ge.each(t,function(t,r){n||Dt.test(e)?i(e,r):z(e+"["+("object"==("undefined"==typeof r?"undefined":_typeof(r))&&null!=r?t:"")+"]",r,n,i)});else if(n||"object"!==ge.type(t))i(e,t);else for(r in t)z(e+"["+r+"]",t[r],n,i)}function X(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,r=0,o=t.toLowerCase().match(Ne)||[];if(ge.isFunction(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function Y(e,t,n,i){function r(a){var l;return o[a]=!0,ge.each(e[a]||[],function(e,a){var u=a(t,n,i);return"string"!=typeof u||s||o[u]?s?!(l=u):void 0:(t.dataTypes.unshift(u),r(u),!1)}),l}var o={},s=e===Mt;return r(t.dataTypes[0])||!o["*"]&&r("*")}function J(e,t){var n,i,r=ge.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((r[n]?e:i||(i={}))[n]=t[n]);return i&&ge.extend(!0,e,i),e}function Z(e,t,n){for(var i,r,o,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(r in a)if(a[r]&&a[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||e.converters[r+" "+l[0]]){o=r;break}s||(s=r)}o=o||s}if(o)return o!==l[0]&&l.unshift(o),n[o]}function ee(e,t,n,i){var r,o,s,a,l,u={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)u[s.toLowerCase()]=e.converters[s];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(s=u[l+" "+o]||u["* "+o],!s)for(r in u)if(a=r.split(" "),a[1]===o&&(s=u[l+" "+a[0]]||u["* "+a[0]])){s===!0?s=u[r]:u[r]!==!0&&(o=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&e["throws"])t=s(t);else try{t=s(t)}catch(f){return{state:"parsererror",error:s?f:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}var te=[],ne=e.document,ie=Object.getPrototypeOf,re=te.slice,oe=te.concat,se=te.push,ae=te.indexOf,le={},ue=le.toString,ce=le.hasOwnProperty,fe=ce.toString,de=fe.call(Object),he={},pe="3.2.1",ge=function zt(e,t){return new zt.fn.init(e,t)},me=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ve=/^-ms-/,ye=/-([a-z])/g,_e=function(e,t){return t.toUpperCase()};ge.fn=ge.prototype={jquery:pe,constructor:ge,length:0,toArray:function(){return re.call(this)},get:function(e){return null==e?re.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=ge.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return ge.each(this,e)},map:function(e){return this.pushStack(ge.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(re.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:se,sort:te.sort,splice:te.splice},ge.extend=ge.fn.extend=function(){var e,t,n,i,r,o,s=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[a]||{},a++),"object"==("undefined"==typeof s?"undefined":_typeof(s))||ge.isFunction(s)||(s={}),a===l&&(s=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)n=s[t],i=e[t],s!==i&&(u&&i&&(ge.isPlainObject(i)||(r=Array.isArray(i)))?(r?(r=!1,o=n&&Array.isArray(n)?n:[]):o=n&&ge.isPlainObject(n)?n:{},s[t]=ge.extend(u,o,i)):void 0!==i&&(s[t]=i));return s},ge.extend({expando:"jQuery"+(pe+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===ge.type(e)},isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=ge.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==ue.call(e)||(t=ie(e))&&(n=ce.call(t,"constructor")&&t.constructor,"function"!=typeof n||fe.call(n)!==de))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==("undefined"==typeof e?"undefined":_typeof(e))||"function"==typeof e?le[ue.call(e)]||"object":"undefined"==typeof e?"undefined":_typeof(e)},globalEval:function(e){n(e)},camelCase:function(e){return e.replace(ve,"ms-").replace(ye,_e)},each:function(e,t){var n,r=0;if(i(e))for(n=e.length;r<n&&t.call(e[r],r,e[r])!==!1;r++);else for(r in e)if(t.call(e[r],r,e[r])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(me,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(i(Object(e))?ge.merge(n,"string"==typeof e?[e]:e):se.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:ae.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,r=e.length;i<n;i++)e[r++]=t[i];return e.length=r,e},grep:function(e,t,n){for(var i,r=[],o=0,s=e.length,a=!n;o<s;o++)i=!t(e[o],o),i!==a&&r.push(e[o]);return r},map:function(e,t,n){var r,o,s=0,a=[];if(i(e))for(r=e.length;s<r;s++)o=t(e[s],s,n),null!=o&&a.push(o);else for(s in e)o=t(e[s],s,n),null!=o&&a.push(o);return oe.apply([],a)},guid:1,proxy:function(e,t){var n,i,r;if("string"==typeof t&&(n=e[t],t=e,e=n),ge.isFunction(e))return i=re.call(arguments,2),r=function(){return e.apply(t||this,i.concat(re.call(arguments)))},r.guid=e.guid=e.guid||ge.guid++,r},now:Date.now,support:he}),"function"==typeof Symbol&&(ge.fn[Symbol.iterator]=te[Symbol.iterator]),ge.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){le["[object "+t+"]"]=t.toLowerCase()});var Te=function(e){function t(e,t,n,i){var r,o,s,a,l,u,c,d=t&&t.ownerDocument,p=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==p&&9!==p&&11!==p)return n;if(!i&&((t?t.ownerDocument||t:q)!==L&&k(t),t=t||L,j)){if(11!==p&&(l=ve.exec(e)))if(r=l[1]){if(9===p){if(!(s=t.getElementById(r)))return n;if(s.id===r)return n.push(s),n}else if(d&&(s=d.getElementById(r))&&F(t,s)&&s.id===r)return n.push(s),n}else{if(l[2])return J.apply(n,t.getElementsByTagName(e)),n;if((r=l[3])&&w.getElementsByClassName&&t.getElementsByClassName)return J.apply(n,t.getElementsByClassName(r)),n}if(w.qsa&&!Q[e+" "]&&(!P||!P.test(e))){if(1!==p)d=t,c=e;else if("object"!==t.nodeName.toLowerCase()){for((a=t.getAttribute("id"))?a=a.replace(Ee,we):t.setAttribute("id",a=M),u=A(e),o=u.length;o--;)u[o]="#"+a+" "+h(u[o]);c=u.join(","),d=ye.test(e)&&f(t.parentNode)||t}if(c)try{return J.apply(n,d.querySelectorAll(c)),n}catch(g){}finally{a===M&&t.removeAttribute("id")}}}return D(e.replace(ae,"$1"),t,n,i)}function n(){function e(n,i){return t.push(n+" ")>b.cacheLength&&delete e[t.shift()],e[n+" "]=i}var t=[];return e}function i(e){return e[M]=!0,e}function r(e){var t=L.createElement("fieldset");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split("|"),i=n.length;i--;)b.attrHandle[n[i]]=t}function s(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function a(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function u(e){return function(t){return"form"in t?t.parentNode&&t.disabled===!1?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&Ce(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function c(e){return i(function(t){return t=+t,i(function(n,i){for(var r,o=e([],n.length,t),s=o.length;s--;)n[r=o[s]]&&(n[r]=!(i[r]=n[r]))})})}function f(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function d(){}function h(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function p(e,t,n){var i=t.dir,r=t.next,o=r||i,s=n&&"parentNode"===o,a=V++;return t.first?function(t,n,r){for(;t=t[i];)if(1===t.nodeType||s)return e(t,n,r);return!1}:function(t,n,l){var u,c,f,d=[B,a];if(l){for(;t=t[i];)if((1===t.nodeType||s)&&e(t,n,l))return!0}else for(;t=t[i];)if(1===t.nodeType||s)if(f=t[M]||(t[M]={}),c=f[t.uniqueID]||(f[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[i]||t;else{if((u=c[o])&&u[0]===B&&u[1]===a)return d[2]=u[2];if(c[o]=d,d[2]=e(t,n,l))return!0}return!1}}function g(e){return e.length>1?function(t,n,i){for(var r=e.length;r--;)if(!e[r](t,n,i))return!1;return!0}:e[0]}function m(e,n,i){for(var r=0,o=n.length;r<o;r++)t(e,n[r],i);return i}function v(e,t,n,i,r){for(var o,s=[],a=0,l=e.length,u=null!=t;a<l;a++)(o=e[a])&&(n&&!n(o,i,r)||(s.push(o),u&&t.push(a)));return s}function y(e,t,n,r,o,s){return r&&!r[M]&&(r=y(r)),o&&!o[M]&&(o=y(o,s)),i(function(i,s,a,l){var u,c,f,d=[],h=[],p=s.length,g=i||m(t||"*",a.nodeType?[a]:a,[]),y=!e||!i&&t?g:v(g,d,e,a,l),_=n?o||(i?e:p||r)?[]:s:y;if(n&&n(y,_,a,l),r)for(u=v(_,h),r(u,[],a,l),c=u.length;c--;)(f=u[c])&&(_[h[c]]=!(y[h[c]]=f));if(i){if(o||e){if(o){for(u=[],c=_.length;c--;)(f=_[c])&&u.push(y[c]=f);o(null,_=[],u,l)}for(c=_.length;c--;)(f=_[c])&&(u=o?ee(i,f):d[c])>-1&&(i[u]=!(s[u]=f))}}else _=v(_===s?_.splice(p,_.length):_),o?o(null,s,_,l):J.apply(s,_)})}function _(e){for(var t,n,i,r=e.length,o=b.relative[e[0].type],s=o||b.relative[" "],a=o?1:0,l=p(function(e){return e===t},s,!0),u=p(function(e){return ee(t,e)>-1},s,!0),c=[function(e,n,i){var r=!o&&(i||n!==I)||((t=n).nodeType?l(e,n,i):u(e,n,i));return t=null,r}];a<r;a++)if(n=b.relative[e[a].type])c=[p(g(c),n)];else{if(n=b.filter[e[a].type].apply(null,e[a].matches),n[M]){for(i=++a;i<r&&!b.relative[e[i].type];i++);return y(a>1&&g(c),a>1&&h(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(ae,"$1"),n,a<i&&_(e.slice(a,i)),i<r&&_(e=e.slice(i)),i<r&&h(e))}c.push(n)}return g(c)}function T(e,n){var r=n.length>0,o=e.length>0,s=function(i,s,a,l,u){var c,f,d,h=0,p="0",g=i&&[],m=[],y=I,_=i||o&&b.find.TAG("*",u),T=B+=null==y?1:Math.random()||.1,E=_.length;for(u&&(I=s===L||s||u);p!==E&&null!=(c=_[p]);p++){if(o&&c){for(f=0,s||c.ownerDocument===L||(k(c),a=!j);d=e[f++];)if(d(c,s||L,a)){l.push(c);break}u&&(B=T)}r&&((c=!d&&c)&&h--,i&&g.push(c))}if(h+=p,r&&p!==h){for(f=0;d=n[f++];)d(g,m,s,a);if(i){if(h>0)for(;p--;)g[p]||m[p]||(m[p]=X.call(l));m=v(m)}J.apply(l,m),u&&!i&&m.length>0&&h+n.length>1&&t.uniqueSort(l)}return u&&(B=T,I=y),g};return r?i(s):s}var E,w,b,C,x,A,S,D,I,O,N,k,L,H,j,P,R,W,F,M="sizzle"+1*new Date,q=e.document,B=0,V=0,U=n(),$=n(),Q=n(),K=function(e,t){return e===t&&(N=!0),0},G={}.hasOwnProperty,z=[],X=z.pop,Y=z.push,J=z.push,Z=z.slice,ee=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",ie="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",re="\\["+ne+"*("+ie+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ie+"))|)"+ne+"*\\]",oe=":("+ie+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+re+")*)|.*)\\)|)",se=new RegExp(ne+"+","g"),ae=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),le=new RegExp("^"+ne+"*,"+ne+"*"),ue=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),ce=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),fe=new RegExp(oe),de=new RegExp("^"+ie+"$"),he={ID:new RegExp("^#("+ie+")"),CLASS:new RegExp("^\\.("+ie+")"),TAG:new RegExp("^("+ie+"|[*])"),ATTR:new RegExp("^"+re),PSEUDO:new RegExp("^"+oe),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},pe=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,me=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,_e=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),Te=function(e,t,n){var i="0x"+t-65536;return i!==i||n?t:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},Ee=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,we=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},be=function(){k()},Ce=p(function(e){return e.disabled===!0&&("form"in e||"label"in e)},{dir:"parentNode",next:"legend"});try{J.apply(z=Z.call(q.childNodes),q.childNodes),z[q.childNodes.length].nodeType}catch(xe){J={apply:z.length?function(e,t){Y.apply(e,Z.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}w=t.support={},x=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},k=t.setDocument=function(e){var t,n,i=e?e.ownerDocument||e:q;return i!==L&&9===i.nodeType&&i.documentElement?(L=i,H=L.documentElement,j=!x(L),q!==L&&(n=L.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",be,!1):n.attachEvent&&n.attachEvent("onunload",be)),w.attributes=r(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=r(function(e){return e.appendChild(L.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=me.test(L.getElementsByClassName),w.getById=r(function(e){return H.appendChild(e).id=M,!L.getElementsByName||!L.getElementsByName(M).length}),w.getById?(b.filter.ID=function(e){var t=e.replace(_e,Te);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&j){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var t=e.replace(_e,Te);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&j){var n,i,r,o=t.getElementById(e);if(o){if(n=o.getAttributeNode("id"),n&&n.value===e)return[o];for(r=t.getElementsByName(e),i=0;o=r[i++];)if(n=o.getAttributeNode("id"),n&&n.value===e)return[o]}return[]}}),b.find.TAG=w.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],r=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},b.find.CLASS=w.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&j)return t.getElementsByClassName(e)},R=[],P=[],(w.qsa=me.test(L.querySelectorAll))&&(r(function(e){H.appendChild(e).innerHTML="<a id='"+M+"'></a><select id='"+M+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&P.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||P.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+M+"-]").length||P.push("~="),e.querySelectorAll(":checked").length||P.push(":checked"),e.querySelectorAll("a#"+M+"+*").length||P.push(".#.+[+~]")}),r(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=L.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&P.push("name"+ne+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&P.push(":enabled",":disabled"),H.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&P.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),P.push(",.*:")})),(w.matchesSelector=me.test(W=H.matches||H.webkitMatchesSelector||H.mozMatchesSelector||H.oMatchesSelector||H.msMatchesSelector))&&r(function(e){w.disconnectedMatch=W.call(e,"*"),W.call(e,"[s!='']:x"),R.push("!=",oe)}),P=P.length&&new RegExp(P.join("|")),R=R.length&&new RegExp(R.join("|")),t=me.test(H.compareDocumentPosition),F=t||me.test(H.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},K=t?function(e,t){if(e===t)return N=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!w.sortDetached&&t.compareDocumentPosition(e)===n?e===L||e.ownerDocument===q&&F(q,e)?-1:t===L||t.ownerDocument===q&&F(q,t)?1:O?ee(O,e)-ee(O,t):0:4&n?-1:1)}:function(e,t){if(e===t)return N=!0,0;var n,i=0,r=e.parentNode,o=t.parentNode,a=[e],l=[t];if(!r||!o)return e===L?-1:t===L?1:r?-1:o?1:O?ee(O,e)-ee(O,t):0;if(r===o)return s(e,t);for(n=e;n=n.parentNode;)a.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;a[i]===l[i];)i++;return i?s(a[i],l[i]):a[i]===q?-1:l[i]===q?1:0},L):L},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==L&&k(e),n=n.replace(ce,"='$1']"),w.matchesSelector&&j&&!Q[n+" "]&&(!R||!R.test(n))&&(!P||!P.test(n)))try{var i=W.call(e,n);if(i||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(r){}return t(n,L,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==L&&k(e),F(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==L&&k(e);var n=b.attrHandle[t.toLowerCase()],i=n&&G.call(b.attrHandle,t.toLowerCase())?n(e,t,!j):void 0;return void 0!==i?i:w.attributes||!j?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},t.escape=function(e){return(e+"").replace(Ee,we)},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],i=0,r=0;if(N=!w.detectDuplicates,O=!w.sortStable&&e.slice(0),e.sort(K),N){for(;t=e[r++];)t===e[r]&&(i=n.push(r));for(;i--;)e.splice(n[i],1)}return O=null,e},C=t.getText=function(e){var t,n="",i=0,r=e.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=C(e)}else if(3===r||4===r)return e.nodeValue}else for(;t=e[i++];)n+=C(t);return n},b=t.selectors={cacheLength:50,createPseudo:i,match:he,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(_e,Te),e[3]=(e[3]||e[4]||e[5]||"").replace(_e,Te),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return he.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&fe.test(n)&&(t=A(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(_e,Te).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=U[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&U(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,i){return function(r){var o=t.attr(r,e);return null==o?"!="===n:!n||(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o.replace(se," ")+" ").indexOf(i)>-1:"|="===n&&(o===i||o.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,n,i,r){var o="nth"!==e.slice(0,3),s="last"!==e.slice(-4),a="of-type"===t;return 1===i&&0===r?function(e){return!!e.parentNode}:function(t,n,l){var u,c,f,d,h,p,g=o!==s?"nextSibling":"previousSibling",m=t.parentNode,v=a&&t.nodeName.toLowerCase(),y=!l&&!a,_=!1;if(m){if(o){for(;g;){for(d=t;d=d[g];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=g="only"===e&&!p&&"nextSibling"}return!0}if(p=[s?m.firstChild:m.lastChild],s&&y){for(d=m,f=d[M]||(d[M]={}),c=f[d.uniqueID]||(f[d.uniqueID]={}),u=c[e]||[],h=u[0]===B&&u[1],_=h&&u[2],d=h&&m.childNodes[h];d=++h&&d&&d[g]||(_=h=0)||p.pop();)if(1===d.nodeType&&++_&&d===t){c[e]=[B,h,_];break}}else if(y&&(d=t,f=d[M]||(d[M]={}),c=f[d.uniqueID]||(f[d.uniqueID]={}),u=c[e]||[],h=u[0]===B&&u[1],_=h),_===!1)for(;(d=++h&&d&&d[g]||(_=h=0)||p.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++_||(y&&(f=d[M]||(d[M]={}),c=f[d.uniqueID]||(f[d.uniqueID]={}),c[e]=[B,_]),d!==t)););return _-=r,_===i||_%i===0&&_/i>=0}}},PSEUDO:function(e,n){var r,o=b.pseudos[e]||b.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[M]?o(n):o.length>1?(r=[e,e,"",n],b.setFilters.hasOwnProperty(e.toLowerCase())?i(function(e,t){for(var i,r=o(e,n),s=r.length;s--;)i=ee(e,r[s]),e[i]=!(t[i]=r[s])}):function(e){return o(e,0,r)}):o}},pseudos:{not:i(function(e){var t=[],n=[],r=S(e.replace(ae,"$1"));return r[M]?i(function(e,t,n,i){for(var o,s=r(e,null,i,[]),a=e.length;a--;)(o=s[a])&&(e[a]=!(t[a]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:i(function(e){return function(n){
return t(e,n).length>0}}),contains:i(function(e){return e=e.replace(_e,Te),function(t){return(t.textContent||t.innerText||C(t)).indexOf(e)>-1}}),lang:i(function(e){return de.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(_e,Te).toLowerCase(),function(t){var n;do if(n=j?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===H},focus:function(e){return e===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return pe.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c(function(){return[0]}),last:c(function(e,t){return[t-1]}),eq:c(function(e,t,n){return[n<0?n+t:n]}),even:c(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:c(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:c(function(e,t,n){for(var i=n<0?n+t:n;--i>=0;)e.push(i);return e}),gt:c(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}},b.pseudos.nth=b.pseudos.eq;for(E in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[E]=a(E);for(E in{submit:!0,reset:!0})b.pseudos[E]=l(E);return d.prototype=b.filters=b.pseudos,b.setFilters=new d,A=t.tokenize=function(e,n){var i,r,o,s,a,l,u,c=$[e+" "];if(c)return n?0:c.slice(0);for(a=e,l=[],u=b.preFilter;a;){i&&!(r=le.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(o=[])),i=!1,(r=ue.exec(a))&&(i=r.shift(),o.push({value:i,type:r[0].replace(ae," ")}),a=a.slice(i.length));for(s in b.filter)!(r=he[s].exec(a))||u[s]&&!(r=u[s](r))||(i=r.shift(),o.push({value:i,type:s,matches:r}),a=a.slice(i.length));if(!i)break}return n?a.length:a?t.error(e):$(e,l).slice(0)},S=t.compile=function(e,t){var n,i=[],r=[],o=Q[e+" "];if(!o){for(t||(t=A(e)),n=t.length;n--;)o=_(t[n]),o[M]?i.push(o):r.push(o);o=Q(e,T(r,i)),o.selector=e}return o},D=t.select=function(e,t,n,i){var r,o,s,a,l,u="function"==typeof e&&e,c=!i&&A(e=u.selector||e);if(n=n||[],1===c.length){if(o=c[0]=c[0].slice(0),o.length>2&&"ID"===(s=o[0]).type&&9===t.nodeType&&j&&b.relative[o[1].type]){if(t=(b.find.ID(s.matches[0].replace(_e,Te),t)||[])[0],!t)return n;u&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(r=he.needsContext.test(e)?0:o.length;r--&&(s=o[r],!b.relative[a=s.type]);)if((l=b.find[a])&&(i=l(s.matches[0].replace(_e,Te),ye.test(o[0].type)&&f(t.parentNode)||t))){if(o.splice(r,1),e=i.length&&h(o),!e)return J.apply(n,i),n;break}}return(u||S(e,c))(i,t,!j,n,!t||ye.test(e)&&f(t.parentNode)||t),n},w.sortStable=M.split("").sort(K).join("")===M,w.detectDuplicates=!!N,k(),w.sortDetached=r(function(e){return 1&e.compareDocumentPosition(L.createElement("fieldset"))}),r(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&r(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),r(function(e){return null==e.getAttribute("disabled")})||o(te,function(e,t,n){var i;if(!n)return e[t]===!0?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),t}(e);ge.find=Te,ge.expr=Te.selectors,ge.expr[":"]=ge.expr.pseudos,ge.uniqueSort=ge.unique=Te.uniqueSort,ge.text=Te.getText,ge.isXMLDoc=Te.isXML,ge.contains=Te.contains,ge.escapeSelector=Te.escape;var Ee=function(e,t,n){for(var i=[],r=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&ge(e).is(n))break;i.push(e)}return i},we=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},be=ge.expr.match.needsContext,Ce=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,xe=/^.[^:#\[\.,]*$/;ge.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?ge.find.matchesSelector(i,e)?[i]:[]:ge.find.matches(e,ge.grep(t,function(e){return 1===e.nodeType}))},ge.fn.extend({find:function(e){var t,n,i=this.length,r=this;if("string"!=typeof e)return this.pushStack(ge(e).filter(function(){for(t=0;t<i;t++)if(ge.contains(r[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)ge.find(e,r[t],n);return i>1?ge.uniqueSort(n):n},filter:function(e){return this.pushStack(o(this,e||[],!1))},not:function(e){return this.pushStack(o(this,e||[],!0))},is:function(e){return!!o(this,"string"==typeof e&&be.test(e)?ge(e):e||[],!1).length}});var Ae,Se=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,De=ge.fn.init=function(e,t,n){var i,r;if(!e)return this;if(n=n||Ae,"string"==typeof e){if(i="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:Se.exec(e),!i||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof ge?t[0]:t,ge.merge(this,ge.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:ne,!0)),Ce.test(i[1])&&ge.isPlainObject(t))for(i in t)ge.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return r=ne.getElementById(i[2]),r&&(this[0]=r,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):ge.isFunction(e)?void 0!==n.ready?n.ready(e):e(ge):ge.makeArray(e,this)};De.prototype=ge.fn,Ae=ge(ne);var Ie=/^(?:parents|prev(?:Until|All))/,Oe={children:!0,contents:!0,next:!0,prev:!0};ge.fn.extend({has:function(e){var t=ge(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(ge.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,r=this.length,o=[],s="string"!=typeof e&&ge(e);if(!be.test(e))for(;i<r;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&ge.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?ge.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?ae.call(ge(e),this[0]):ae.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(ge.uniqueSort(ge.merge(this.get(),ge(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ge.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return Ee(e,"parentNode")},parentsUntil:function(e,t,n){return Ee(e,"parentNode",n)},next:function(e){return s(e,"nextSibling")},prev:function(e){return s(e,"previousSibling")},nextAll:function(e){return Ee(e,"nextSibling")},prevAll:function(e){return Ee(e,"previousSibling")},nextUntil:function(e,t,n){return Ee(e,"nextSibling",n)},prevUntil:function(e,t,n){return Ee(e,"previousSibling",n)},siblings:function(e){return we((e.parentNode||{}).firstChild,e)},children:function(e){return we(e.firstChild)},contents:function(e){return r(e,"iframe")?e.contentDocument:(r(e,"template")&&(e=e.content||e),ge.merge([],e.childNodes))}},function(e,t){ge.fn[e]=function(n,i){var r=ge.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=ge.filter(i,r)),this.length>1&&(Oe[e]||ge.uniqueSort(r),Ie.test(e)&&r.reverse()),this.pushStack(r)}});var Ne=/[^\x20\t\r\n\f]+/g;ge.Callbacks=function(e){e="string"==typeof e?a(e):ge.extend({},e);var t,n,i,r,o=[],s=[],l=-1,u=function(){for(r=r||e.once,i=t=!0;s.length;l=-1)for(n=s.shift();++l<o.length;)o[l].apply(n[0],n[1])===!1&&e.stopOnFalse&&(l=o.length,n=!1);e.memory||(n=!1),t=!1,r&&(o=n?[]:"")},c={add:function(){return o&&(n&&!t&&(l=o.length-1,s.push(n)),function i(t){ge.each(t,function(t,n){ge.isFunction(n)?e.unique&&c.has(n)||o.push(n):n&&n.length&&"string"!==ge.type(n)&&i(n)})}(arguments),n&&!t&&u()),this},remove:function(){return ge.each(arguments,function(e,t){for(var n;(n=ge.inArray(t,o,n))>-1;)o.splice(n,1),n<=l&&l--}),this},has:function(e){return e?ge.inArray(e,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return r=s=[],o=n="",this},disabled:function(){return!o},lock:function(){return r=s=[],n||t||(o=n=""),this},locked:function(){return!!r},fireWith:function(e,n){return r||(n=n||[],n=[e,n.slice?n.slice():n],s.push(n),t||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!i}};return c},ge.extend({Deferred:function(t){var n=[["notify","progress",ge.Callbacks("memory"),ge.Callbacks("memory"),2],["resolve","done",ge.Callbacks("once memory"),ge.Callbacks("once memory"),0,"resolved"],["reject","fail",ge.Callbacks("once memory"),ge.Callbacks("once memory"),1,"rejected"]],i="pending",r={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},"catch":function(e){return r.then(null,e)},pipe:function(){var e=arguments;return ge.Deferred(function(t){ge.each(n,function(n,i){var r=ge.isFunction(e[i[4]])&&e[i[4]];o[i[1]](function(){var e=r&&r.apply(this,arguments);e&&ge.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[i[0]+"With"](this,r?[e]:arguments)})}),e=null}).promise()},then:function(t,i,r){function o(t,n,i,r){return function(){var a=this,c=arguments,f=function h(){var e,h;if(!(t<s)){if(e=i.apply(a,c),e===n.promise())throw new TypeError("Thenable self-resolution");h=e&&("object"==("undefined"==typeof e?"undefined":_typeof(e))||"function"==typeof e)&&e.then,ge.isFunction(h)?r?h.call(e,o(s,n,l,r),o(s,n,u,r)):(s++,h.call(e,o(s,n,l,r),o(s,n,u,r),o(s,n,l,n.notifyWith))):(i!==l&&(a=void 0,c=[e]),(r||n.resolveWith)(a,c))}},d=r?f:function(){try{f()}catch(e){ge.Deferred.exceptionHook&&ge.Deferred.exceptionHook(e,d.stackTrace),t+1>=s&&(i!==u&&(a=void 0,c=[e]),n.rejectWith(a,c))}};t?d():(ge.Deferred.getStackHook&&(d.stackTrace=ge.Deferred.getStackHook()),e.setTimeout(d))}}var s=0;return ge.Deferred(function(e){n[0][3].add(o(0,e,ge.isFunction(r)?r:l,e.notifyWith)),n[1][3].add(o(0,e,ge.isFunction(t)?t:l)),n[2][3].add(o(0,e,ge.isFunction(i)?i:u))}).promise()},promise:function(e){return null!=e?ge.extend(e,r):r}},o={};return ge.each(n,function(e,t){var s=t[2],a=t[5];r[t[1]]=s.add,a&&s.add(function(){i=a},n[3-e][2].disable,n[0][2].lock),s.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=s.fireWith}),r.promise(o),t&&t.call(o,o),o},when:function(e){var t=arguments.length,n=t,i=Array(n),r=re.call(arguments),o=ge.Deferred(),s=function(e){return function(n){i[e]=this,r[e]=arguments.length>1?re.call(arguments):n,--t||o.resolveWith(i,r)}};if(t<=1&&(c(e,o.done(s(n)).resolve,o.reject,!t),"pending"===o.state()||ge.isFunction(r[n]&&r[n].then)))return o.then();for(;n--;)c(r[n],s(n),o.reject);return o.promise()}});var ke=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;ge.Deferred.exceptionHook=function(t,n){e.console&&e.console.warn&&t&&ke.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,n)},ge.readyException=function(t){e.setTimeout(function(){throw t})};var Le=ge.Deferred();ge.fn.ready=function(e){return Le.then(e)["catch"](function(e){ge.readyException(e)}),this},ge.extend({isReady:!1,readyWait:1,ready:function(e){(e===!0?--ge.readyWait:ge.isReady)||(ge.isReady=!0,e!==!0&&--ge.readyWait>0||Le.resolveWith(ne,[ge]))}}),ge.ready.then=Le.then,"complete"===ne.readyState||"loading"!==ne.readyState&&!ne.documentElement.doScroll?e.setTimeout(ge.ready):(ne.addEventListener("DOMContentLoaded",f),e.addEventListener("load",f));var He=function Xt(e,t,n,i,r,o,s){var a=0,l=e.length,u=null==n;if("object"===ge.type(n)){r=!0;for(a in n)Xt(e,t,a,n[a],!0,o,s)}else if(void 0!==i&&(r=!0,ge.isFunction(i)||(s=!0),u&&(s?(t.call(e,i),t=null):(u=t,t=function(e,t,n){return u.call(ge(e),n)})),t))for(;a<l;a++)t(e[a],n,s?i:i.call(e[a],a,t(e[a],n)));return r?e:u?t.call(e):l?t(e[0],n):o},je=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};d.uid=1,d.prototype={cache:function(e){var t=e[this.expando];return t||(t={},je(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,r=this.cache(e);if("string"==typeof t)r[ge.camelCase(t)]=n;else for(i in t)r[ge.camelCase(i)]=t[i];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][ge.camelCase(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){Array.isArray(t)?t=t.map(ge.camelCase):(t=ge.camelCase(t),t=t in i?[t]:t.match(Ne)||[]),n=t.length;for(;n--;)delete i[t[n]]}(void 0===t||ge.isEmptyObject(i))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!ge.isEmptyObject(t)}};var Pe=new d,Re=new d,We=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Fe=/[A-Z]/g;ge.extend({hasData:function(e){return Re.hasData(e)||Pe.hasData(e)},data:function(e,t,n){return Re.access(e,t,n)},removeData:function(e,t){Re.remove(e,t)},_data:function(e,t,n){return Pe.access(e,t,n)},_removeData:function(e,t){Pe.remove(e,t)}}),ge.fn.extend({data:function(e,t){var n,i,r,o=this[0],s=o&&o.attributes;if(void 0===e){if(this.length&&(r=Re.get(o),1===o.nodeType&&!Pe.get(o,"hasDataAttrs"))){for(n=s.length;n--;)s[n]&&(i=s[n].name,0===i.indexOf("data-")&&(i=ge.camelCase(i.slice(5)),p(o,i,r[i])));Pe.set(o,"hasDataAttrs",!0)}return r}return"object"==("undefined"==typeof e?"undefined":_typeof(e))?this.each(function(){Re.set(this,e)}):He(this,function(t){var n;if(o&&void 0===t){if(n=Re.get(o,e),void 0!==n)return n;if(n=p(o,e),void 0!==n)return n}else this.each(function(){Re.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){Re.remove(this,e)})}}),ge.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=Pe.get(e,t),n&&(!i||Array.isArray(n)?i=Pe.access(e,t,ge.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=ge.queue(e,t),i=n.length,r=n.shift(),o=ge._queueHooks(e,t),s=function(){ge.dequeue(e,t)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===t&&n.unshift("inprogress"),delete o.stop,r.call(e,s,o)),!i&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Pe.get(e,n)||Pe.access(e,n,{empty:ge.Callbacks("once memory").add(function(){Pe.remove(e,[t+"queue",n])})})}}),ge.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?ge.queue(this[0],e):void 0===t?this:this.each(function(){var n=ge.queue(this,e,t);ge._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&ge.dequeue(this,e)})},dequeue:function(e){return this.each(function(){ge.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,r=ge.Deferred(),o=this,s=this.length,a=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)n=Pe.get(o[s],e+"queueHooks"),n&&n.empty&&(i++,n.empty.add(a));return a(),r.promise(t)}});var Me=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,qe=new RegExp("^(?:([+-])=|)("+Me+")([a-z%]*)$","i"),Be=["Top","Right","Bottom","Left"],Ve=function(e,t){return e=t||e,"none"===e.style.display||""===e.style.display&&ge.contains(e.ownerDocument,e)&&"none"===ge.css(e,"display")},Ue=function(e,t,n,i){var r,o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];r=n.apply(e,i||[]);for(o in t)e.style[o]=s[o];return r},$e={};ge.fn.extend({show:function(){return v(this,!0)},hide:function(){return v(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Ve(this)?ge(this).show():ge(this).hide()})}});var Qe=/^(?:checkbox|radio)$/i,Ke=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ge=/^$|\/(?:java|ecma)script/i,ze={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ze.optgroup=ze.option,ze.tbody=ze.tfoot=ze.colgroup=ze.caption=ze.thead,ze.th=ze.td;var Xe=/<|&#?\w+;/;!function(){var e=ne.createDocumentFragment(),t=e.appendChild(ne.createElement("div")),n=ne.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),he.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",he.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Ye=ne.documentElement,Je=/^key/,Ze=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,et=/^([^.]*)(?:\.(.+)|)/;ge.event={global:{},add:function(e,t,n,i,r){var o,s,a,l,u,c,f,d,h,p,g,m=Pe.get(e);if(m)for(n.handler&&(o=n,n=o.handler,r=o.selector),r&&ge.find.matchesSelector(Ye,r),n.guid||(n.guid=ge.guid++),(l=m.events)||(l=m.events={}),(s=m.handle)||(s=m.handle=function(t){return"undefined"!=typeof ge&&ge.event.triggered!==t.type?ge.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(Ne)||[""],u=t.length;u--;)a=et.exec(t[u])||[],h=g=a[1],p=(a[2]||"").split(".").sort(),h&&(f=ge.event.special[h]||{},h=(r?f.delegateType:f.bindType)||h,f=ge.event.special[h]||{},c=ge.extend({type:h,origType:g,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&ge.expr.match.needsContext.test(r),namespace:p.join(".")},o),(d=l[h])||(d=l[h]=[],d.delegateCount=0,f.setup&&f.setup.call(e,i,p,s)!==!1||e.addEventListener&&e.addEventListener(h,s)),f.add&&(f.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),r?d.splice(d.delegateCount++,0,c):d.push(c),ge.event.global[h]=!0)},remove:function(e,t,n,i,r){var o,s,a,l,u,c,f,d,h,p,g,m=Pe.hasData(e)&&Pe.get(e);if(m&&(l=m.events)){for(t=(t||"").match(Ne)||[""],u=t.length;u--;)if(a=et.exec(t[u])||[],h=g=a[1],p=(a[2]||"").split(".").sort(),h){for(f=ge.event.special[h]||{},h=(i?f.delegateType:f.bindType)||h,d=l[h]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=o=d.length;o--;)c=d[o],!r&&g!==c.origType||n&&n.guid!==c.guid||a&&!a.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(d.splice(o,1),c.selector&&d.delegateCount--,f.remove&&f.remove.call(e,c));s&&!d.length&&(f.teardown&&f.teardown.call(e,p,m.handle)!==!1||ge.removeEvent(e,h,m.handle),delete l[h])}else for(h in l)ge.event.remove(e,h+t[u],n,i,!0);ge.isEmptyObject(l)&&Pe.remove(e,"handle events")}},dispatch:function(e){var t,n,i,r,o,s,a=ge.event.fix(e),l=new Array(arguments.length),u=(Pe.get(this,"events")||{})[a.type]||[],c=ge.event.special[a.type]||{};for(l[0]=a,t=1;t<arguments.length;t++)l[t]=arguments[t];if(a.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,a)!==!1){for(s=ge.event.handlers.call(this,a,u),t=0;(r=s[t++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,i=((ge.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l),void 0!==i&&(a.result=i)===!1&&(a.preventDefault(),a.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,a),a.result}},handlers:function(e,t){var n,i,r,o,s,a=[],l=t.delegateCount,u=e.target;if(l&&u.nodeType&&!("click"===e.type&&e.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==e.type||u.disabled!==!0)){for(o=[],s={},n=0;n<l;n++)i=t[n],r=i.selector+" ",void 0===s[r]&&(s[r]=i.needsContext?ge(r,this).index(u)>-1:ge.find(r,this,null,[u]).length),s[r]&&o.push(i);o.length&&a.push({elem:u,handlers:o})}return u=this,l<t.length&&a.push({elem:u,handlers:t.slice(l)}),a},addProp:function(e,t){Object.defineProperty(ge.Event.prototype,e,{enumerable:!0,configurable:!0,get:ge.isFunction(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[ge.expando]?e:new ge.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==b()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===b()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&r(this,"input"))return this.click(),!1},_default:function(e){return r(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},ge.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},ge.Event=function(e,t){return this instanceof ge.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?E:w,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&ge.extend(this,t),this.timeStamp=e&&e.timeStamp||ge.now(),void(this[ge.expando]=!0)):new ge.Event(e,t)},ge.Event.prototype={constructor:ge.Event,isDefaultPrevented:w,isPropagationStopped:w,isImmediatePropagationStopped:w,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=E,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=E,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=E,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},ge.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Je.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ze.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},ge.event.addProp),ge.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){ge.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=this,r=e.relatedTarget,o=e.handleObj;return r&&(r===i||ge.contains(i,r))||(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),ge.fn.extend({on:function(e,t,n,i){return C(this,e,t,n,i)},one:function(e,t,n,i){return C(this,e,t,n,i,1)},off:function(e,t,n){var i,r;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,ge(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==("undefined"==typeof e?"undefined":_typeof(e))){for(r in e)this.off(r,t,e[r]);return this}return t!==!1&&"function"!=typeof t||(n=t,t=void 0),n===!1&&(n=w),this.each(function(){ge.event.remove(this,e,n,t)})}});var tt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,nt=/<script|<style|<link/i,it=/checked\s*(?:[^=]|=\s*.checked.)/i,rt=/^true\/(.*)/,ot=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;ge.extend({htmlPrefilter:function(e){return e.replace(tt,"<$1></$2>")},clone:function(e,t,n){var i,r,o,s,a=e.cloneNode(!0),l=ge.contains(e.ownerDocument,e);if(!(he.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ge.isXMLDoc(e)))for(s=y(a),o=y(e),i=0,r=o.length;i<r;i++)I(o[i],s[i]);if(t)if(n)for(o=o||y(e),s=s||y(a),i=0,r=o.length;i<r;i++)D(o[i],s[i]);else D(e,a);return s=y(a,"script"),s.length>0&&_(s,!l&&y(e,"script")),a},cleanData:function(e){for(var t,n,i,r=ge.event.special,o=0;void 0!==(n=e[o]);o++)if(je(n)){if(t=n[Pe.expando]){if(t.events)for(i in t.events)r[i]?ge.event.remove(n,i):ge.removeEvent(n,i,t.handle);n[Pe.expando]=void 0}n[Re.expando]&&(n[Re.expando]=void 0)}}}),ge.fn.extend({detach:function(e){return N(this,e,!0)},remove:function(e){return N(this,e)},text:function(e){return He(this,function(e){return void 0===e?ge.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return O(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=x(this,e);t.appendChild(e)}})},prepend:function(){return O(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=x(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return O(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return O(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(ge.cleanData(y(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return ge.clone(this,e,t)})},html:function(e){return He(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!nt.test(e)&&!ze[(Ke.exec(e)||["",""])[1].toLowerCase()]){e=ge.htmlPrefilter(e);try{for(;n<i;n++)t=this[n]||{},1===t.nodeType&&(ge.cleanData(y(t,!1)),t.innerHTML=e);t=0}catch(r){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return O(this,arguments,function(t){var n=this.parentNode;ge.inArray(this,e)<0&&(ge.cleanData(y(this)),n&&n.replaceChild(t,this))},e)}}),ge.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){ge.fn[e]=function(e){for(var n,i=[],r=ge(e),o=r.length-1,s=0;s<=o;s++)n=s===o?this:this.clone(!0),ge(r[s])[t](n),se.apply(i,n.get());return this.pushStack(i)}});var st=/^margin/,at=new RegExp("^("+Me+")(?!px)[a-z%]+$","i"),lt=function(t){var n=t.ownerDocument.defaultView;return n&&n.opener||(n=e),n.getComputedStyle(t)};!function(){function t(){if(a){a.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Ye.appendChild(s);var t=e.getComputedStyle(a);n="1%"!==t.top,o="2px"===t.marginLeft,i="4px"===t.width,a.style.marginRight="50%",r="4px"===t.marginRight,Ye.removeChild(s),a=null}}var n,i,r,o,s=ne.createElement("div"),a=ne.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",he.clearCloneStyle="content-box"===a.style.backgroundClip,s.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",s.appendChild(a),ge.extend(he,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return t(),i},pixelMarginRight:function(){return t(),r},reliableMarginLeft:function(){return t(),o}}))}();var ut=/^(none|table(?!-c[ea]).+)/,ct=/^--/,ft={position:"absolute",visibility:"hidden",display:"block"},dt={letterSpacing:"0",fontWeight:"400"},ht=["Webkit","Moz","ms"],pt=ne.createElement("div").style;ge.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=k(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,o,s,a=ge.camelCase(t),l=ct.test(t),u=e.style;return l||(t=j(a)),s=ge.cssHooks[t]||ge.cssHooks[a],void 0===n?s&&"get"in s&&void 0!==(r=s.get(e,!1,i))?r:u[t]:(o="undefined"==typeof n?"undefined":_typeof(n),"string"===o&&(r=qe.exec(n))&&r[1]&&(n=g(e,t,r),o="number"),void(null!=n&&n===n&&("number"===o&&(n+=r&&r[3]||(ge.cssNumber[a]?"":"px")),he.clearCloneStyle||""!==n||0!==t.indexOf("background")||(u[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l?u.setProperty(t,n):u[t]=n))))}},css:function(e,t,n,i){var r,o,s,a=ge.camelCase(t),l=ct.test(t);return l||(t=j(a)),s=ge.cssHooks[t]||ge.cssHooks[a],s&&"get"in s&&(r=s.get(e,!0,n)),void 0===r&&(r=k(e,t,i)),"normal"===r&&t in dt&&(r=dt[t]),""===n||n?(o=parseFloat(r),n===!0||isFinite(o)?o||0:r):r}}),ge.each(["height","width"],function(e,t){ge.cssHooks[t]={get:function(e,n,i){if(n)return!ut.test(ge.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?W(e,t,i):Ue(e,ft,function(){return W(e,t,i)})},set:function(e,n,i){var r,o=i&&lt(e),s=i&&R(e,t,i,"border-box"===ge.css(e,"boxSizing",!1,o),o);return s&&(r=qe.exec(n))&&"px"!==(r[3]||"px")&&(e.style[t]=n,n=ge.css(e,t)),P(e,n,s)}}}),ge.cssHooks.marginLeft=L(he.reliableMarginLeft,function(e,t){if(t)return(parseFloat(k(e,"marginLeft"))||e.getBoundingClientRect().left-Ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),ge.each({margin:"",padding:"",border:"Width"},function(e,t){ge.cssHooks[e+t]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[e+Be[i]+t]=o[i]||o[i-2]||o[0];return r}},st.test(e)||(ge.cssHooks[e+t].set=P)}),ge.fn.extend({css:function(e,t){return He(this,function(e,t,n){var i,r,o={},s=0;if(Array.isArray(t)){for(i=lt(e),r=t.length;s<r;s++)o[t[s]]=ge.css(e,t[s],!1,i);return o}return void 0!==n?ge.style(e,t,n):ge.css(e,t)},e,t,arguments.length>1)}}),ge.Tween=F,F.prototype={constructor:F,init:function(e,t,n,i,r,o){this.elem=e,this.prop=n,this.easing=r||ge.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=o||(ge.cssNumber[n]?"":"px")},cur:function(){var e=F.propHooks[this.prop];return e&&e.get?e.get(this):F.propHooks._default.get(this)},run:function(e){var t,n=F.propHooks[this.prop];return this.options.duration?this.pos=t=ge.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):F.propHooks._default.set(this),this}},F.prototype.init.prototype=F.prototype,F.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=ge.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){ge.fx.step[e.prop]?ge.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[ge.cssProps[e.prop]]&&!ge.cssHooks[e.prop]?e.elem[e.prop]=e.now:ge.style(e.elem,e.prop,e.now+e.unit)}}},F.propHooks.scrollTop=F.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ge.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},ge.fx=F.prototype.init,ge.fx.step={};var gt,mt,vt=/^(?:toggle|show|hide)$/,yt=/queueHooks$/;ge.Animation=ge.extend(Q,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return g(n.elem,e,qe.exec(t),n),n}]},tweener:function(e,t){ge.isFunction(e)?(t=e,e=["*"]):e=e.match(Ne);for(var n,i=0,r=e.length;i<r;i++)n=e[i],Q.tweeners[n]=Q.tweeners[n]||[],Q.tweeners[n].unshift(t)},prefilters:[U],prefilter:function(e,t){t?Q.prefilters.unshift(e):Q.prefilters.push(e)}}),ge.speed=function(e,t,n){var i=e&&"object"==("undefined"==typeof e?"undefined":_typeof(e))?ge.extend({},e):{complete:n||!n&&t||ge.isFunction(e)&&e,duration:e,easing:n&&t||t&&!ge.isFunction(t)&&t};return ge.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in ge.fx.speeds?i.duration=ge.fx.speeds[i.duration]:i.duration=ge.fx.speeds._default),null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){ge.isFunction(i.old)&&i.old.call(this),
i.queue&&ge.dequeue(this,i.queue)},i},ge.fn.extend({fadeTo:function(e,t,n,i){return this.filter(Ve).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var r=ge.isEmptyObject(e),o=ge.speed(t,n,i),s=function(){var t=Q(this,ge.extend({},e),o);(r||Pe.get(this,"finish"))&&t.stop(!0)};return s.finish=s,r||o.queue===!1?this.each(s):this.queue(o.queue,s)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,r=null!=e&&e+"queueHooks",o=ge.timers,s=Pe.get(this);if(r)s[r]&&s[r].stop&&i(s[r]);else for(r in s)s[r]&&s[r].stop&&yt.test(r)&&i(s[r]);for(r=o.length;r--;)o[r].elem!==this||null!=e&&o[r].queue!==e||(o[r].anim.stop(n),t=!1,o.splice(r,1));!t&&n||ge.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=Pe.get(this),i=n[e+"queue"],r=n[e+"queueHooks"],o=ge.timers,s=i?i.length:0;for(n.finish=!0,ge.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<s;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete n.finish})}}),ge.each(["toggle","show","hide"],function(e,t){var n=ge.fn[t];ge.fn[t]=function(e,i,r){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(B(t,!0),e,i,r)}}),ge.each({slideDown:B("show"),slideUp:B("hide"),slideToggle:B("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){ge.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}}),ge.timers=[],ge.fx.tick=function(){var e,t=0,n=ge.timers;for(gt=ge.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||ge.fx.stop(),gt=void 0},ge.fx.timer=function(e){ge.timers.push(e),ge.fx.start()},ge.fx.interval=13,ge.fx.start=function(){mt||(mt=!0,M())},ge.fx.stop=function(){mt=null},ge.fx.speeds={slow:600,fast:200,_default:400},ge.fn.delay=function(t,n){return t=ge.fx?ge.fx.speeds[t]||t:t,n=n||"fx",this.queue(n,function(n,i){var r=e.setTimeout(n,t);i.stop=function(){e.clearTimeout(r)}})},function(){var e=ne.createElement("input"),t=ne.createElement("select"),n=t.appendChild(ne.createElement("option"));e.type="checkbox",he.checkOn=""!==e.value,he.optSelected=n.selected,e=ne.createElement("input"),e.value="t",e.type="radio",he.radioValue="t"===e.value}();var _t,Tt=ge.expr.attrHandle;ge.fn.extend({attr:function(e,t){return He(this,ge.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){ge.removeAttr(this,e)})}}),ge.extend({attr:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?ge.prop(e,t,n):(1===o&&ge.isXMLDoc(e)||(r=ge.attrHooks[t.toLowerCase()]||(ge.expr.match.bool.test(t)?_t:void 0)),void 0!==n?null===n?void ge.removeAttr(e,t):r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:(e.setAttribute(t,n+""),n):r&&"get"in r&&null!==(i=r.get(e,t))?i:(i=ge.find.attr(e,t),null==i?void 0:i))},attrHooks:{type:{set:function(e,t){if(!he.radioValue&&"radio"===t&&r(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,r=t&&t.match(Ne);if(r&&1===e.nodeType)for(;n=r[i++];)e.removeAttribute(n)}}),_t={set:function(e,t,n){return t===!1?ge.removeAttr(e,n):e.setAttribute(n,n),n}},ge.each(ge.expr.match.bool.source.match(/\w+/g),function(e,t){var n=Tt[t]||ge.find.attr;Tt[t]=function(e,t,i){var r,o,s=t.toLowerCase();return i||(o=Tt[s],Tt[s]=r,r=null!=n(e,t,i)?s:null,Tt[s]=o),r}});var Et=/^(?:input|select|textarea|button)$/i,wt=/^(?:a|area)$/i;ge.fn.extend({prop:function(e,t){return He(this,ge.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[ge.propFix[e]||e]})}}),ge.extend({prop:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&ge.isXMLDoc(e)||(t=ge.propFix[t]||t,r=ge.propHooks[t]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:e[t]=n:r&&"get"in r&&null!==(i=r.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=ge.find.attr(e,"tabindex");return t?parseInt(t,10):Et.test(e.nodeName)||wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),he.optSelected||(ge.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),ge.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ge.propFix[this.toLowerCase()]=this}),ge.fn.extend({addClass:function(e){var t,n,i,r,o,s,a,l=0;if(ge.isFunction(e))return this.each(function(t){ge(this).addClass(e.call(this,t,G(this)))});if("string"==typeof e&&e)for(t=e.match(Ne)||[];n=this[l++];)if(r=G(n),i=1===n.nodeType&&" "+K(r)+" "){for(s=0;o=t[s++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");a=K(i),r!==a&&n.setAttribute("class",a)}return this},removeClass:function(e){var t,n,i,r,o,s,a,l=0;if(ge.isFunction(e))return this.each(function(t){ge(this).removeClass(e.call(this,t,G(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(Ne)||[];n=this[l++];)if(r=G(n),i=1===n.nodeType&&" "+K(r)+" "){for(s=0;o=t[s++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");a=K(i),r!==a&&n.setAttribute("class",a)}return this},toggleClass:function(e,t){var n="undefined"==typeof e?"undefined":_typeof(e);return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):ge.isFunction(e)?this.each(function(n){ge(this).toggleClass(e.call(this,n,G(this),t),t)}):this.each(function(){var t,i,r,o;if("string"===n)for(i=0,r=ge(this),o=e.match(Ne)||[];t=o[i++];)r.hasClass(t)?r.removeClass(t):r.addClass(t);else void 0!==e&&"boolean"!==n||(t=G(this),t&&Pe.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||e===!1?"":Pe.get(this,"__className__")||""))})},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&(" "+K(G(n))+" ").indexOf(t)>-1)return!0;return!1}});var bt=/\r/g;ge.fn.extend({val:function(e){var t,n,i,r=this[0];return arguments.length?(i=ge.isFunction(e),this.each(function(n){var r;1===this.nodeType&&(r=i?e.call(this,n,ge(this).val()):e,null==r?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=ge.map(r,function(e){return null==e?"":e+""})),t=ge.valHooks[this.type]||ge.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))})):r?(t=ge.valHooks[r.type]||ge.valHooks[r.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(bt,""):null==n?"":n)):void 0}}),ge.extend({valHooks:{option:{get:function(e){var t=ge.find.attr(e,"value");return null!=t?t:K(ge.text(e))}},select:{get:function(e){var t,n,i,o=e.options,s=e.selectedIndex,a="select-one"===e.type,l=a?null:[],u=a?s+1:o.length;for(i=s<0?u:a?s:0;i<u;i++)if(n=o[i],(n.selected||i===s)&&!n.disabled&&(!n.parentNode.disabled||!r(n.parentNode,"optgroup"))){if(t=ge(n).val(),a)return t;l.push(t)}return l},set:function(e,t){for(var n,i,r=e.options,o=ge.makeArray(t),s=r.length;s--;)i=r[s],(i.selected=ge.inArray(ge.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),ge.each(["radio","checkbox"],function(){ge.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=ge.inArray(ge(e).val(),t)>-1}},he.checkOn||(ge.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Ct=/^(?:focusinfocus|focusoutblur)$/;ge.extend(ge.event,{trigger:function(t,n,i,r){var o,s,a,l,u,c,f,d=[i||ne],h=ce.call(t,"type")?t.type:t,p=ce.call(t,"namespace")?t.namespace.split("."):[];if(s=a=i=i||ne,3!==i.nodeType&&8!==i.nodeType&&!Ct.test(h+ge.event.triggered)&&(h.indexOf(".")>-1&&(p=h.split("."),h=p.shift(),p.sort()),u=h.indexOf(":")<0&&"on"+h,t=t[ge.expando]?t:new ge.Event(h,"object"==("undefined"==typeof t?"undefined":_typeof(t))&&t),t.isTrigger=r?2:3,t.namespace=p.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),n=null==n?[t]:ge.makeArray(n,[t]),f=ge.event.special[h]||{},r||!f.trigger||f.trigger.apply(i,n)!==!1)){if(!r&&!f.noBubble&&!ge.isWindow(i)){for(l=f.delegateType||h,Ct.test(l+h)||(s=s.parentNode);s;s=s.parentNode)d.push(s),a=s;a===(i.ownerDocument||ne)&&d.push(a.defaultView||a.parentWindow||e)}for(o=0;(s=d[o++])&&!t.isPropagationStopped();)t.type=o>1?l:f.bindType||h,c=(Pe.get(s,"events")||{})[t.type]&&Pe.get(s,"handle"),c&&c.apply(s,n),c=u&&s[u],c&&c.apply&&je(s)&&(t.result=c.apply(s,n),t.result===!1&&t.preventDefault());return t.type=h,r||t.isDefaultPrevented()||f._default&&f._default.apply(d.pop(),n)!==!1||!je(i)||u&&ge.isFunction(i[h])&&!ge.isWindow(i)&&(a=i[u],a&&(i[u]=null),ge.event.triggered=h,i[h](),ge.event.triggered=void 0,a&&(i[u]=a)),t.result}},simulate:function(e,t,n){var i=ge.extend(new ge.Event,n,{type:e,isSimulated:!0});ge.event.trigger(i,null,t)}}),ge.fn.extend({trigger:function(e,t){return this.each(function(){ge.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return ge.event.trigger(e,t,n,!0)}}),ge.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,t){ge.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),ge.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),he.focusin="onfocusin"in e,he.focusin||ge.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){ge.event.simulate(t,e.target,ge.event.fix(e))};ge.event.special[t]={setup:function(){var i=this.ownerDocument||this,r=Pe.access(i,t);r||i.addEventListener(e,n,!0),Pe.access(i,t,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=Pe.access(i,t)-1;r?Pe.access(i,t,r):(i.removeEventListener(e,n,!0),Pe.remove(i,t))}}});var xt=e.location,At=ge.now(),St=/\?/;ge.parseXML=function(t){var n;if(!t||"string"!=typeof t)return null;try{n=(new e.DOMParser).parseFromString(t,"text/xml")}catch(i){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||ge.error("Invalid XML: "+t),n};var Dt=/\[\]$/,It=/\r?\n/g,Ot=/^(?:submit|button|image|reset|file)$/i,Nt=/^(?:input|select|textarea|keygen)/i;ge.param=function(e,t){var n,i=[],r=function(e,t){var n=ge.isFunction(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(e)||e.jquery&&!ge.isPlainObject(e))ge.each(e,function(){r(this.name,this.value)});else for(n in e)z(n,e[n],t,r);return i.join("&")},ge.fn.extend({serialize:function(){return ge.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ge.prop(this,"elements");return e?ge.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ge(this).is(":disabled")&&Nt.test(this.nodeName)&&!Ot.test(e)&&(this.checked||!Qe.test(e))}).map(function(e,t){var n=ge(this).val();return null==n?null:Array.isArray(n)?ge.map(n,function(e){return{name:t.name,value:e.replace(It,"\r\n")}}):{name:t.name,value:n.replace(It,"\r\n")}}).get()}});var kt=/%20/g,Lt=/#.*$/,Ht=/([?&])_=[^&]*/,jt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Pt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Rt=/^(?:GET|HEAD)$/,Wt=/^\/\//,Ft={},Mt={},qt="*/".concat("*"),Bt=ne.createElement("a");Bt.href=xt.href,ge.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:xt.href,type:"GET",isLocal:Pt.test(xt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":qt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":ge.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?J(J(e,ge.ajaxSettings),t):J(ge.ajaxSettings,e)},ajaxPrefilter:X(Ft),ajaxTransport:X(Mt),ajax:function(t,n){function i(t,n,i,a){var u,d,h,T,E,w=n;c||(c=!0,l&&e.clearTimeout(l),r=void 0,s=a||"",b.readyState=t>0?4:0,u=t>=200&&t<300||304===t,i&&(T=Z(p,b,i)),T=ee(p,T,b,u),u?(p.ifModified&&(E=b.getResponseHeader("Last-Modified"),E&&(ge.lastModified[o]=E),E=b.getResponseHeader("etag"),E&&(ge.etag[o]=E)),204===t||"HEAD"===p.type?w="nocontent":304===t?w="notmodified":(w=T.state,d=T.data,h=T.error,u=!h)):(h=w,!t&&w||(w="error",t<0&&(t=0))),b.status=t,b.statusText=(n||w)+"",u?v.resolveWith(g,[d,w,b]):v.rejectWith(g,[b,w,h]),b.statusCode(_),_=void 0,f&&m.trigger(u?"ajaxSuccess":"ajaxError",[b,p,u?d:h]),y.fireWith(g,[b,w]),f&&(m.trigger("ajaxComplete",[b,p]),--ge.active||ge.event.trigger("ajaxStop")))}"object"==("undefined"==typeof t?"undefined":_typeof(t))&&(n=t,t=void 0),n=n||{};var r,o,s,a,l,u,c,f,d,h,p=ge.ajaxSetup({},n),g=p.context||p,m=p.context&&(g.nodeType||g.jquery)?ge(g):ge.event,v=ge.Deferred(),y=ge.Callbacks("once memory"),_=p.statusCode||{},T={},E={},w="canceled",b={readyState:0,getResponseHeader:function(e){var t;if(c){if(!a)for(a={};t=jt.exec(s);)a[t[1].toLowerCase()]=t[2];t=a[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return c?s:null},setRequestHeader:function(e,t){return null==c&&(e=E[e.toLowerCase()]=E[e.toLowerCase()]||e,T[e]=t),this},overrideMimeType:function(e){return null==c&&(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)b.always(e[b.status]);else for(t in e)_[t]=[_[t],e[t]];return this},abort:function(e){var t=e||w;return r&&r.abort(t),i(0,t),this}};if(v.promise(b),p.url=((t||p.url||xt.href)+"").replace(Wt,xt.protocol+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(Ne)||[""],null==p.crossDomain){u=ne.createElement("a");try{u.href=p.url,u.href=u.href,p.crossDomain=Bt.protocol+"//"+Bt.host!=u.protocol+"//"+u.host}catch(C){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=ge.param(p.data,p.traditional)),Y(Ft,p,n,b),c)return b;f=ge.event&&p.global,f&&0===ge.active++&&ge.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Rt.test(p.type),o=p.url.replace(Lt,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(kt,"+")):(h=p.url.slice(o.length),p.data&&(o+=(St.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(o=o.replace(Ht,"$1"),h=(St.test(o)?"&":"?")+"_="+At++ +h),p.url=o+h),p.ifModified&&(ge.lastModified[o]&&b.setRequestHeader("If-Modified-Since",ge.lastModified[o]),ge.etag[o]&&b.setRequestHeader("If-None-Match",ge.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&b.setRequestHeader("Content-Type",p.contentType),b.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+qt+"; q=0.01":""):p.accepts["*"]);for(d in p.headers)b.setRequestHeader(d,p.headers[d]);if(p.beforeSend&&(p.beforeSend.call(g,b,p)===!1||c))return b.abort();if(w="abort",y.add(p.complete),b.done(p.success),b.fail(p.error),r=Y(Mt,p,n,b)){if(b.readyState=1,f&&m.trigger("ajaxSend",[b,p]),c)return b;p.async&&p.timeout>0&&(l=e.setTimeout(function(){b.abort("timeout")},p.timeout));try{c=!1,r.send(T,i)}catch(C){if(c)throw C;i(-1,C)}}else i(-1,"No Transport");return b},getJSON:function(e,t,n){return ge.get(e,t,n,"json")},getScript:function(e,t){return ge.get(e,void 0,t,"script")}}),ge.each(["get","post"],function(e,t){ge[t]=function(e,n,i,r){return ge.isFunction(n)&&(r=r||i,i=n,n=void 0),ge.ajax(ge.extend({url:e,type:t,dataType:r,data:n,success:i},ge.isPlainObject(e)&&e))}}),ge._evalUrl=function(e){return ge.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},ge.fn.extend({wrapAll:function(e){var t;return this[0]&&(ge.isFunction(e)&&(e=e.call(this[0])),t=ge(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return ge.isFunction(e)?this.each(function(t){ge(this).wrapInner(e.call(this,t))}):this.each(function(){var t=ge(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=ge.isFunction(e);return this.each(function(n){ge(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(e){return this.parent(e).not("body").each(function(){ge(this).replaceWith(this.childNodes)}),this}}),ge.expr.pseudos.hidden=function(e){return!ge.expr.pseudos.visible(e)},ge.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},ge.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(t){}};var Vt={0:200,1223:204},Ut=ge.ajaxSettings.xhr();he.cors=!!Ut&&"withCredentials"in Ut,he.ajax=Ut=!!Ut,ge.ajaxTransport(function(t){var n,i;if(he.cors||Ut&&!t.crossDomain)return{send:function(r,o){var s,a=t.xhr();if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(s in t.xhrFields)a[s]=t.xhrFields[s];t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(s in r)a.setRequestHeader(s,r[s]);n=function(e){return function(){n&&(n=i=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===e?a.abort():"error"===e?"number"!=typeof a.status?o(0,"error"):o(a.status,a.statusText):o(Vt[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=n(),i=a.onerror=n("error"),void 0!==a.onabort?a.onabort=i:a.onreadystatechange=function(){4===a.readyState&&e.setTimeout(function(){n&&i()})},n=n("abort");try{a.send(t.hasContent&&t.data||null)}catch(l){if(n)throw l}},abort:function(){n&&n()}}}),ge.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),ge.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return ge.globalEval(e),e}}}),ge.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),ge.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(i,r){t=ge("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&r("error"===e.type?404:200,e.type)}),ne.head.appendChild(t[0])},abort:function(){n&&n()}}}});var $t=[],Qt=/(=)\?(?=&|$)|\?\?/;ge.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=$t.pop()||ge.expando+"_"+At++;return this[e]=!0,e}}),ge.ajaxPrefilter("json jsonp",function(t,n,i){var r,o,s,a=t.jsonp!==!1&&(Qt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Qt.test(t.data)&&"data");if(a||"jsonp"===t.dataTypes[0])return r=t.jsonpCallback=ge.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Qt,"$1"+r):t.jsonp!==!1&&(t.url+=(St.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return s||ge.error(r+" was not called"),s[0]},t.dataTypes[0]="json",o=e[r],e[r]=function(){s=arguments},i.always(function(){void 0===o?ge(e).removeProp(r):e[r]=o,t[r]&&(t.jsonpCallback=n.jsonpCallback,$t.push(r)),s&&ge.isFunction(o)&&o(s[0]),s=o=void 0}),"script"}),he.createHTMLDocument=function(){var e=ne.implementation.createHTMLDocument("").body;return e.innerHTML="<form></form><form></form>",2===e.childNodes.length}(),ge.parseHTML=function(e,t,n){if("string"!=typeof e)return[];"boolean"==typeof t&&(n=t,t=!1);var i,r,o;return t||(he.createHTMLDocument?(t=ne.implementation.createHTMLDocument(""),i=t.createElement("base"),i.href=ne.location.href,t.head.appendChild(i)):t=ne),r=Ce.exec(e),o=!n&&[],r?[t.createElement(r[1])]:(r=T([e],t,o),o&&o.length&&ge(o).remove(),ge.merge([],r.childNodes))},ge.fn.load=function(e,t,n){var i,r,o,s=this,a=e.indexOf(" ");return a>-1&&(i=K(e.slice(a)),e=e.slice(0,a)),ge.isFunction(t)?(n=t,t=void 0):t&&"object"==("undefined"==typeof t?"undefined":_typeof(t))&&(r="POST"),s.length>0&&ge.ajax({url:e,type:r||"GET",dataType:"html",data:t}).done(function(e){o=arguments,s.html(i?ge("<div>").append(ge.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},ge.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){ge.fn[t]=function(e){return this.on(t,e)}}),ge.expr.pseudos.animated=function(e){return ge.grep(ge.timers,function(t){return e===t.elem}).length},ge.offset={setOffset:function(e,t,n){var i,r,o,s,a,l,u,c=ge.css(e,"position"),f=ge(e),d={};"static"===c&&(e.style.position="relative"),a=f.offset(),o=ge.css(e,"top"),l=ge.css(e,"left"),u=("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1,u?(i=f.position(),s=i.top,r=i.left):(s=parseFloat(o)||0,r=parseFloat(l)||0),ge.isFunction(t)&&(t=t.call(e,n,ge.extend({},a))),null!=t.top&&(d.top=t.top-a.top+s),null!=t.left&&(d.left=t.left-a.left+r),"using"in t?t.using.call(e,d):f.css(d)}},ge.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){ge.offset.setOffset(this,e,t)});var t,n,i,r,o=this[0];return o?o.getClientRects().length?(i=o.getBoundingClientRect(),t=o.ownerDocument,n=t.documentElement,r=t.defaultView,{top:i.top+r.pageYOffset-n.clientTop,left:i.left+r.pageXOffset-n.clientLeft}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n=this[0],i={top:0,left:0};return"fixed"===ge.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),r(e[0],"html")||(i=e.offset()),i={top:i.top+ge.css(e[0],"borderTopWidth",!0),left:i.left+ge.css(e[0],"borderLeftWidth",!0)}),{top:t.top-i.top-ge.css(n,"marginTop",!0),left:t.left-i.left-ge.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===ge.css(e,"position");)e=e.offsetParent;return e||Ye})}}),ge.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n="pageYOffset"===t;ge.fn[e]=function(i){return He(this,function(e,i,r){var o;return ge.isWindow(e)?o=e:9===e.nodeType&&(o=e.defaultView),void 0===r?o?o[t]:e[i]:void(o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):e[i]=r)},e,i,arguments.length)}}),ge.each(["top","left"],function(e,t){ge.cssHooks[t]=L(he.pixelPosition,function(e,n){if(n)return n=k(e,t),at.test(n)?ge(e).position()[t]+"px":n})}),ge.each({Height:"height",Width:"width"},function(e,t){ge.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,i){ge.fn[i]=function(r,o){var s=arguments.length&&(n||"boolean"!=typeof r),a=n||(r===!0||o===!0?"margin":"border");return He(this,function(t,n,r){var o;return ge.isWindow(t)?0===i.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body["scroll"+e],o["scroll"+e],t.body["offset"+e],o["offset"+e],o["client"+e])):void 0===r?ge.css(t,n,a):ge.style(t,n,r,a)},t,s?r:void 0,s)}})}),ge.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),ge.holdReady=function(e){e?ge.readyWait++:ge.ready(!0)},ge.isArray=Array.isArray,ge.parseJSON=JSON.parse,ge.nodeName=r,"function"==typeof define&&define.amd&&define("jquery",[],function(){return ge});var Kt=e.jQuery,Gt=e.$;return ge.noConflict=function(t){return e.$===ge&&(e.$=Gt),t&&e.jQuery===ge&&(e.jQuery=Kt),ge},t||(e.jQuery=e.$=ge),ge});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");+function(e){var t=e.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||t[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(jQuery),+function(){function e(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=("undefined"==typeof t?"undefined":_typeof(t))&&"function"!=typeof t?e:t}function t(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+("undefined"==typeof t?"undefined":_typeof(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":_typeof(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":"undefined"==typeof e?"undefined":_typeof(e)},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=function(e){function t(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}function n(e){return(e[0]||e).nodeType}function i(){return{bindType:a.end,delegateType:a.end,handle:function(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}}}function r(){if(window.QUnit)return!1;var e=document.createElement("bootstrap");for(var t in u)if(void 0!==e.style[t])return{end:u[t]};return!1}function o(t){var n=this,i=!1;return e(this).one(c.TRANSITION_END,function(){i=!0}),setTimeout(function(){i||c.triggerTransitionEnd(n)},t),this}function s(){a=r(),e.fn.emulateTransitionEnd=o,c.supportsTransitionEnd()&&(e.event.special[c.TRANSITION_END]=i())}var a=!1,l=1e6,u={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},c={TRANSITION_END:"bsTransitionEnd",getUID:function(e){do e+=~~(Math.random()*l);while(document.getElementById(e));return e},getSelectorFromElement:function(e){var t=e.getAttribute("data-target");return t||(t=e.getAttribute("href")||"",t=/^#[a-z]/i.test(t)?t:null),t},reflow:function(e){return e.offsetHeight},triggerTransitionEnd:function(t){e(t).trigger(a.end)},supportsTransitionEnd:function(){return Boolean(a)},typeCheckConfig:function(e,i,r){for(var o in r)if(r.hasOwnProperty(o)){var s=r[o],a=i[o],l=a&&n(a)?"element":t(a);if(!new RegExp(s).test(l))throw new Error(e.toUpperCase()+": "+('Option "'+o+'" provided type "'+l+'" ')+('but expected type "'+s+'".'))}}};return s(),c}(jQuery),s=(function(e){var t="alert",i="4.0.0-alpha.6",s="bs.alert",a="."+s,l=".data-api",u=e.fn[t],c=150,f={DISMISS:'[data-dismiss="alert"]'},d={CLOSE:"close"+a,CLOSED:"closed"+a,CLICK_DATA_API:"click"+a+l},h={ALERT:"alert",FADE:"fade",SHOW:"show"},p=function(){function t(e){n(this,t),this._element=e}return t.prototype.close=function(e){e=e||this._element;var t=this._getRootElement(e),n=this._triggerCloseEvent(t);n.isDefaultPrevented()||this._removeElement(t)},t.prototype.dispose=function(){e.removeData(this._element,s),this._element=null},t.prototype._getRootElement=function(t){var n=o.getSelectorFromElement(t),i=!1;return n&&(i=e(n)[0]),i||(i=e(t).closest("."+h.ALERT)[0]),i},t.prototype._triggerCloseEvent=function(t){var n=e.Event(d.CLOSE);return e(t).trigger(n),n},t.prototype._removeElement=function(t){var n=this;return e(t).removeClass(h.SHOW),o.supportsTransitionEnd()&&e(t).hasClass(h.FADE)?void e(t).one(o.TRANSITION_END,function(e){return n._destroyElement(t,e)}).emulateTransitionEnd(c):void this._destroyElement(t)},t.prototype._destroyElement=function(t){e(t).detach().trigger(d.CLOSED).remove()},t._jQueryInterface=function(n){return this.each(function(){var i=e(this),r=i.data(s);r||(r=new t(this),i.data(s,r)),"close"===n&&r[n](this)})},t._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},r(t,null,[{key:"VERSION",get:function(){return i}}]),t}();return e(document).on(d.CLICK_DATA_API,f.DISMISS,p._handleDismiss(new p)),e.fn[t]=p._jQueryInterface,e.fn[t].Constructor=p,e.fn[t].noConflict=function(){return e.fn[t]=u,p._jQueryInterface},p}(jQuery),function(e){var t="button",i="4.0.0-alpha.6",o="bs.button",s="."+o,a=".data-api",l=e.fn[t],u={ACTIVE:"active",BUTTON:"btn",FOCUS:"focus"},c={DATA_TOGGLE_CARROT:'[data-toggle^="button"]',DATA_TOGGLE:'[data-toggle="buttons"]',INPUT:"input",ACTIVE:".active",BUTTON:".btn"},f={CLICK_DATA_API:"click"+s+a,FOCUS_BLUR_DATA_API:"focus"+s+a+" "+("blur"+s+a)},d=function(){function t(e){n(this,t),this._element=e}return t.prototype.toggle=function(){var t=!0,n=e(this._element).closest(c.DATA_TOGGLE)[0];if(n){var i=e(this._element).find(c.INPUT)[0];if(i){if("radio"===i.type)if(i.checked&&e(this._element).hasClass(u.ACTIVE))t=!1;else{var r=e(n).find(c.ACTIVE)[0];r&&e(r).removeClass(u.ACTIVE)}t&&(i.checked=!e(this._element).hasClass(u.ACTIVE),e(i).trigger("change")),i.focus()}}this._element.setAttribute("aria-pressed",!e(this._element).hasClass(u.ACTIVE)),t&&e(this._element).toggleClass(u.ACTIVE)},t.prototype.dispose=function(){e.removeData(this._element,o),this._element=null},t._jQueryInterface=function(n){return this.each(function(){var i=e(this).data(o);i||(i=new t(this),e(this).data(o,i)),"toggle"===n&&i[n]()})},r(t,null,[{key:"VERSION",get:function(){return i}}]),t}();return e(document).on(f.CLICK_DATA_API,c.DATA_TOGGLE_CARROT,function(t){t.preventDefault();var n=t.target;e(n).hasClass(u.BUTTON)||(n=e(n).closest(c.BUTTON)),d._jQueryInterface.call(e(n),"toggle")}).on(f.FOCUS_BLUR_DATA_API,c.DATA_TOGGLE_CARROT,function(t){var n=e(t.target).closest(c.BUTTON)[0];e(n).toggleClass(u.FOCUS,/^focus(in)?$/.test(t.type))}),e.fn[t]=d._jQueryInterface,e.fn[t].Constructor=d,e.fn[t].noConflict=function(){return e.fn[t]=l,d._jQueryInterface},d}(jQuery),function(e){var t="carousel",s="4.0.0-alpha.6",a="bs.carousel",l="."+a,u=".data-api",c=e.fn[t],f=600,d=37,h=39,p={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},g={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},m={NEXT:"next",PREV:"prev",LEFT:"left",RIGHT:"right"},v={SLIDE:"slide"+l,SLID:"slid"+l,KEYDOWN:"keydown"+l,MOUSEENTER:"mouseenter"+l,MOUSELEAVE:"mouseleave"+l,LOAD_DATA_API:"load"+l+u,CLICK_DATA_API:"click"+l+u},y={CAROUSEL:"carousel",ACTIVE:"active",SLIDE:"slide",RIGHT:"carousel-item-right",LEFT:"carousel-item-left",NEXT:"carousel-item-next",PREV:"carousel-item-prev",ITEM:"carousel-item"},_={ACTIVE:".active",ACTIVE_ITEM:".active.carousel-item",ITEM:".carousel-item",NEXT_PREV:".carousel-item-next, .carousel-item-prev",INDICATORS:".carousel-indicators",DATA_SLIDE:"[data-slide], [data-slide-to]",DATA_RIDE:'[data-ride="carousel"]'},T=function(){function u(t,i){n(this,u),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this._config=this._getConfig(i),this._element=e(t)[0],this._indicatorsElement=e(this._element).find(_.INDICATORS)[0],this._addEventListeners()}return u.prototype.next=function(){if(this._isSliding)throw new Error("Carousel is sliding");this._slide(m.NEXT)},u.prototype.nextWhenVisible=function(){document.hidden||this.next()},u.prototype.prev=function(){if(this._isSliding)throw new Error("Carousel is sliding");this._slide(m.PREVIOUS)},u.prototype.pause=function(t){t||(this._isPaused=!0),e(this._element).find(_.NEXT_PREV)[0]&&o.supportsTransitionEnd()&&(o.triggerTransitionEnd(this._element),
this.cycle(!0)),clearInterval(this._interval),this._interval=null},u.prototype.cycle=function(e){e||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},u.prototype.to=function(t){var n=this;this._activeElement=e(this._element).find(_.ACTIVE_ITEM)[0];var i=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0)){if(this._isSliding)return void e(this._element).one(v.SLID,function(){return n.to(t)});if(i===t)return this.pause(),void this.cycle();var r=t>i?m.NEXT:m.PREVIOUS;this._slide(r,this._items[t])}},u.prototype.dispose=function(){e(this._element).off(l),e.removeData(this._element,a),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},u.prototype._getConfig=function(n){return n=e.extend({},p,n),o.typeCheckConfig(t,n,g),n},u.prototype._addEventListeners=function(){var t=this;this._config.keyboard&&e(this._element).on(v.KEYDOWN,function(e){return t._keydown(e)}),"hover"!==this._config.pause||"ontouchstart"in document.documentElement||e(this._element).on(v.MOUSEENTER,function(e){return t.pause(e)}).on(v.MOUSELEAVE,function(e){return t.cycle(e)})},u.prototype._keydown=function(e){if(!/input|textarea/i.test(e.target.tagName))switch(e.which){case d:e.preventDefault(),this.prev();break;case h:e.preventDefault(),this.next();break;default:return}},u.prototype._getItemIndex=function(t){return this._items=e.makeArray(e(t).parent().find(_.ITEM)),this._items.indexOf(t)},u.prototype._getItemByDirection=function(e,t){var n=e===m.NEXT,i=e===m.PREVIOUS,r=this._getItemIndex(t),o=this._items.length-1,s=i&&0===r||n&&r===o;if(s&&!this._config.wrap)return t;var a=e===m.PREVIOUS?-1:1,l=(r+a)%this._items.length;return l===-1?this._items[this._items.length-1]:this._items[l]},u.prototype._triggerSlideEvent=function(t,n){var i=e.Event(v.SLIDE,{relatedTarget:t,direction:n});return e(this._element).trigger(i),i},u.prototype._setActiveIndicatorElement=function(t){if(this._indicatorsElement){e(this._indicatorsElement).find(_.ACTIVE).removeClass(y.ACTIVE);var n=this._indicatorsElement.children[this._getItemIndex(t)];n&&e(n).addClass(y.ACTIVE)}},u.prototype._slide=function(t,n){var i=this,r=e(this._element).find(_.ACTIVE_ITEM)[0],s=n||r&&this._getItemByDirection(t,r),a=Boolean(this._interval),l=void 0,u=void 0,c=void 0;if(t===m.NEXT?(l=y.LEFT,u=y.NEXT,c=m.LEFT):(l=y.RIGHT,u=y.PREV,c=m.RIGHT),s&&e(s).hasClass(y.ACTIVE))return void(this._isSliding=!1);var d=this._triggerSlideEvent(s,c);if(!d.isDefaultPrevented()&&r&&s){this._isSliding=!0,a&&this.pause(),this._setActiveIndicatorElement(s);var h=e.Event(v.SLID,{relatedTarget:s,direction:c});o.supportsTransitionEnd()&&e(this._element).hasClass(y.SLIDE)?(e(s).addClass(u),o.reflow(s),e(r).addClass(l),e(s).addClass(l),e(r).one(o.TRANSITION_END,function(){e(s).removeClass(l+" "+u).addClass(y.ACTIVE),e(r).removeClass(y.ACTIVE+" "+u+" "+l),i._isSliding=!1,setTimeout(function(){return e(i._element).trigger(h)},0)}).emulateTransitionEnd(f)):(e(r).removeClass(y.ACTIVE),e(s).addClass(y.ACTIVE),this._isSliding=!1,e(this._element).trigger(h)),a&&this.cycle()}},u._jQueryInterface=function(t){return this.each(function(){var n=e(this).data(a),r=e.extend({},p,e(this).data());"object"===("undefined"==typeof t?"undefined":i(t))&&e.extend(r,t);var o="string"==typeof t?t:r.slide;if(n||(n=new u(this,r),e(this).data(a,n)),"number"==typeof t)n.to(t);else if("string"==typeof o){if(void 0===n[o])throw new Error('No method named "'+o+'"');n[o]()}else r.interval&&(n.pause(),n.cycle())})},u._dataApiClickHandler=function(t){var n=o.getSelectorFromElement(this);if(n){var i=e(n)[0];if(i&&e(i).hasClass(y.CAROUSEL)){var r=e.extend({},e(i).data(),e(this).data()),s=this.getAttribute("data-slide-to");s&&(r.interval=!1),u._jQueryInterface.call(e(i),r),s&&e(i).data(a).to(s),t.preventDefault()}}},r(u,null,[{key:"VERSION",get:function(){return s}},{key:"Default",get:function(){return p}}]),u}();return e(document).on(v.CLICK_DATA_API,_.DATA_SLIDE,T._dataApiClickHandler),e(window).on(v.LOAD_DATA_API,function(){e(_.DATA_RIDE).each(function(){var t=e(this);T._jQueryInterface.call(t,t.data())})}),e.fn[t]=T._jQueryInterface,e.fn[t].Constructor=T,e.fn[t].noConflict=function(){return e.fn[t]=c,T._jQueryInterface},T}(jQuery),function(e){var t="collapse",s="4.0.0-alpha.6",a="bs.collapse",l="."+a,u=".data-api",c=e.fn[t],f=600,d={toggle:!0,parent:""},h={toggle:"boolean",parent:"string"},p={SHOW:"show"+l,SHOWN:"shown"+l,HIDE:"hide"+l,HIDDEN:"hidden"+l,CLICK_DATA_API:"click"+l+u},g={SHOW:"show",COLLAPSE:"collapse",COLLAPSING:"collapsing",COLLAPSED:"collapsed"},m={WIDTH:"width",HEIGHT:"height"},v={ACTIVES:".card > .show, .card > .collapsing",DATA_TOGGLE:'[data-toggle="collapse"]'},y=function(){function l(t,i){n(this,l),this._isTransitioning=!1,this._element=t,this._config=this._getConfig(i),this._triggerArray=e.makeArray(e('[data-toggle="collapse"][href="#'+t.id+'"],'+('[data-toggle="collapse"][data-target="#'+t.id+'"]'))),this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}return l.prototype.toggle=function(){e(this._element).hasClass(g.SHOW)?this.hide():this.show()},l.prototype.show=function(){var t=this;if(this._isTransitioning)throw new Error("Collapse is transitioning");if(!e(this._element).hasClass(g.SHOW)){var n=void 0,i=void 0;if(this._parent&&(n=e.makeArray(e(this._parent).find(v.ACTIVES)),n.length||(n=null)),!(n&&(i=e(n).data(a),i&&i._isTransitioning))){var r=e.Event(p.SHOW);if(e(this._element).trigger(r),!r.isDefaultPrevented()){n&&(l._jQueryInterface.call(e(n),"hide"),i||e(n).data(a,null));var s=this._getDimension();e(this._element).removeClass(g.COLLAPSE).addClass(g.COLLAPSING),this._element.style[s]=0,this._element.setAttribute("aria-expanded",!0),this._triggerArray.length&&e(this._triggerArray).removeClass(g.COLLAPSED).attr("aria-expanded",!0),this.setTransitioning(!0);var u=function(){e(t._element).removeClass(g.COLLAPSING).addClass(g.COLLAPSE).addClass(g.SHOW),t._element.style[s]="",t.setTransitioning(!1),e(t._element).trigger(p.SHOWN)};if(!o.supportsTransitionEnd())return void u();var c=s[0].toUpperCase()+s.slice(1),d="scroll"+c;e(this._element).one(o.TRANSITION_END,u).emulateTransitionEnd(f),this._element.style[s]=this._element[d]+"px"}}}},l.prototype.hide=function(){var t=this;if(this._isTransitioning)throw new Error("Collapse is transitioning");if(e(this._element).hasClass(g.SHOW)){var n=e.Event(p.HIDE);if(e(this._element).trigger(n),!n.isDefaultPrevented()){var i=this._getDimension(),r=i===m.WIDTH?"offsetWidth":"offsetHeight";this._element.style[i]=this._element[r]+"px",o.reflow(this._element),e(this._element).addClass(g.COLLAPSING).removeClass(g.COLLAPSE).removeClass(g.SHOW),this._element.setAttribute("aria-expanded",!1),this._triggerArray.length&&e(this._triggerArray).addClass(g.COLLAPSED).attr("aria-expanded",!1),this.setTransitioning(!0);var s=function(){t.setTransitioning(!1),e(t._element).removeClass(g.COLLAPSING).addClass(g.COLLAPSE).trigger(p.HIDDEN)};return this._element.style[i]="",o.supportsTransitionEnd()?void e(this._element).one(o.TRANSITION_END,s).emulateTransitionEnd(f):void s()}}},l.prototype.setTransitioning=function(e){this._isTransitioning=e},l.prototype.dispose=function(){e.removeData(this._element,a),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},l.prototype._getConfig=function(n){return n=e.extend({},d,n),n.toggle=Boolean(n.toggle),o.typeCheckConfig(t,n,h),n},l.prototype._getDimension=function(){var t=e(this._element).hasClass(m.WIDTH);return t?m.WIDTH:m.HEIGHT},l.prototype._getParent=function(){var t=this,n=e(this._config.parent)[0],i='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]';return e(n).find(i).each(function(e,n){t._addAriaAndCollapsedClass(l._getTargetFromElement(n),[n])}),n},l.prototype._addAriaAndCollapsedClass=function(t,n){if(t){var i=e(t).hasClass(g.SHOW);t.setAttribute("aria-expanded",i),n.length&&e(n).toggleClass(g.COLLAPSED,!i).attr("aria-expanded",i)}},l._getTargetFromElement=function(t){var n=o.getSelectorFromElement(t);return n?e(n)[0]:null},l._jQueryInterface=function(t){return this.each(function(){var n=e(this),r=n.data(a),o=e.extend({},d,n.data(),"object"===("undefined"==typeof t?"undefined":i(t))&&t);if(!r&&o.toggle&&/show|hide/.test(t)&&(o.toggle=!1),r||(r=new l(this,o),n.data(a,r)),"string"==typeof t){if(void 0===r[t])throw new Error('No method named "'+t+'"');r[t]()}})},r(l,null,[{key:"VERSION",get:function(){return s}},{key:"Default",get:function(){return d}}]),l}();return e(document).on(p.CLICK_DATA_API,v.DATA_TOGGLE,function(t){t.preventDefault();var n=y._getTargetFromElement(this),i=e(n).data(a),r=i?"toggle":e(this).data();y._jQueryInterface.call(e(n),r)}),e.fn[t]=y._jQueryInterface,e.fn[t].Constructor=y,e.fn[t].noConflict=function(){return e.fn[t]=c,y._jQueryInterface},y}(jQuery),function(e){var t="dropdown",i="4.0.0-alpha.6",s="bs.dropdown",a="."+s,l=".data-api",u=e.fn[t],c=27,f=38,d=40,h=3,p={HIDE:"hide"+a,HIDDEN:"hidden"+a,SHOW:"show"+a,SHOWN:"shown"+a,CLICK:"click"+a,CLICK_DATA_API:"click"+a+l,FOCUSIN_DATA_API:"focusin"+a+l,KEYDOWN_DATA_API:"keydown"+a+l},g={BACKDROP:"dropdown-backdrop",DISABLED:"disabled",SHOW:"show"},m={BACKDROP:".dropdown-backdrop",DATA_TOGGLE:'[data-toggle="dropdown"]',FORM_CHILD:".dropdown form",ROLE_MENU:'[role="menu"]',ROLE_LISTBOX:'[role="listbox"]',NAVBAR_NAV:".navbar-nav",VISIBLE_ITEMS:'[role="menu"] li:not(.disabled) a, [role="listbox"] li:not(.disabled) a'},v=function(){function t(e){n(this,t),this._element=e,this._addEventListeners()}return t.prototype.toggle=function(){if(this.disabled||e(this).hasClass(g.DISABLED))return!1;var n=t._getParentFromElement(this),i=e(n).hasClass(g.SHOW);if(t._clearMenus(),i)return!1;if("ontouchstart"in document.documentElement&&!e(n).closest(m.NAVBAR_NAV).length){var r=document.createElement("div");r.className=g.BACKDROP,e(r).insertBefore(this),e(r).on("click",t._clearMenus)}var o={relatedTarget:this},s=e.Event(p.SHOW,o);return e(n).trigger(s),!s.isDefaultPrevented()&&(this.focus(),this.setAttribute("aria-expanded",!0),e(n).toggleClass(g.SHOW),e(n).trigger(e.Event(p.SHOWN,o)),!1)},t.prototype.dispose=function(){e.removeData(this._element,s),e(this._element).off(a),this._element=null},t.prototype._addEventListeners=function(){e(this._element).on(p.CLICK,this.toggle)},t._jQueryInterface=function(n){return this.each(function(){var i=e(this).data(s);if(i||(i=new t(this),e(this).data(s,i)),"string"==typeof n){if(void 0===i[n])throw new Error('No method named "'+n+'"');i[n].call(this)}})},t._clearMenus=function(n){if(!n||n.which!==h){var i=e(m.BACKDROP)[0];i&&i.parentNode.removeChild(i);for(var r=e.makeArray(e(m.DATA_TOGGLE)),o=0;o<r.length;o++){var s=t._getParentFromElement(r[o]),a={relatedTarget:r[o]};if(e(s).hasClass(g.SHOW)&&!(n&&("click"===n.type&&/input|textarea/i.test(n.target.tagName)||"focusin"===n.type)&&e.contains(s,n.target))){var l=e.Event(p.HIDE,a);e(s).trigger(l),l.isDefaultPrevented()||(r[o].setAttribute("aria-expanded","false"),e(s).removeClass(g.SHOW).trigger(e.Event(p.HIDDEN,a)))}}}},t._getParentFromElement=function(t){var n=void 0,i=o.getSelectorFromElement(t);return i&&(n=e(i)[0]),n||t.parentNode},t._dataApiKeydownHandler=function(n){if(/(38|40|27|32)/.test(n.which)&&!/input|textarea/i.test(n.target.tagName)&&(n.preventDefault(),n.stopPropagation(),!this.disabled&&!e(this).hasClass(g.DISABLED))){var i=t._getParentFromElement(this),r=e(i).hasClass(g.SHOW);if(!r&&n.which!==c||r&&n.which===c){if(n.which===c){var o=e(i).find(m.DATA_TOGGLE)[0];e(o).trigger("focus")}return void e(this).trigger("click")}var s=e(i).find(m.VISIBLE_ITEMS).get();if(s.length){var a=s.indexOf(n.target);n.which===f&&a>0&&a--,n.which===d&&a<s.length-1&&a++,a<0&&(a=0),s[a].focus()}}},r(t,null,[{key:"VERSION",get:function(){return i}}]),t}();return e(document).on(p.KEYDOWN_DATA_API,m.DATA_TOGGLE,v._dataApiKeydownHandler).on(p.KEYDOWN_DATA_API,m.ROLE_MENU,v._dataApiKeydownHandler).on(p.KEYDOWN_DATA_API,m.ROLE_LISTBOX,v._dataApiKeydownHandler).on(p.CLICK_DATA_API+" "+p.FOCUSIN_DATA_API,v._clearMenus).on(p.CLICK_DATA_API,m.DATA_TOGGLE,v.prototype.toggle).on(p.CLICK_DATA_API,m.FORM_CHILD,function(e){e.stopPropagation()}),e.fn[t]=v._jQueryInterface,e.fn[t].Constructor=v,e.fn[t].noConflict=function(){return e.fn[t]=u,v._jQueryInterface},v}(jQuery),function(e){var t="modal",s="4.0.0-alpha.6",a="bs.modal",l="."+a,u=".data-api",c=e.fn[t],f=300,d=150,h=27,p={backdrop:!0,keyboard:!0,focus:!0,show:!0},g={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},m={HIDE:"hide"+l,HIDDEN:"hidden"+l,SHOW:"show"+l,SHOWN:"shown"+l,FOCUSIN:"focusin"+l,RESIZE:"resize"+l,CLICK_DISMISS:"click.dismiss"+l,KEYDOWN_DISMISS:"keydown.dismiss"+l,MOUSEUP_DISMISS:"mouseup.dismiss"+l,MOUSEDOWN_DISMISS:"mousedown.dismiss"+l,CLICK_DATA_API:"click"+l+u},v={SCROLLBAR_MEASURER:"modal-scrollbar-measure",BACKDROP:"modal-backdrop",OPEN:"modal-open",FADE:"fade",SHOW:"show"},y={DIALOG:".modal-dialog",DATA_TOGGLE:'[data-toggle="modal"]',DATA_DISMISS:'[data-dismiss="modal"]',FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top"},_=function(){function u(t,i){n(this,u),this._config=this._getConfig(i),this._element=t,this._dialog=e(t).find(y.DIALOG)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}return u.prototype.toggle=function(e){return this._isShown?this.hide():this.show(e)},u.prototype.show=function(t){var n=this;if(this._isTransitioning)throw new Error("Modal is transitioning");o.supportsTransitionEnd()&&e(this._element).hasClass(v.FADE)&&(this._isTransitioning=!0);var i=e.Event(m.SHOW,{relatedTarget:t});e(this._element).trigger(i),this._isShown||i.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),e(document.body).addClass(v.OPEN),this._setEscapeEvent(),this._setResizeEvent(),e(this._element).on(m.CLICK_DISMISS,y.DATA_DISMISS,function(e){return n.hide(e)}),e(this._dialog).on(m.MOUSEDOWN_DISMISS,function(){e(n._element).one(m.MOUSEUP_DISMISS,function(t){e(t.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(t)}))},u.prototype.hide=function(t){var n=this;if(t&&t.preventDefault(),this._isTransitioning)throw new Error("Modal is transitioning");var i=o.supportsTransitionEnd()&&e(this._element).hasClass(v.FADE);i&&(this._isTransitioning=!0);var r=e.Event(m.HIDE);e(this._element).trigger(r),this._isShown&&!r.isDefaultPrevented()&&(this._isShown=!1,this._setEscapeEvent(),this._setResizeEvent(),e(document).off(m.FOCUSIN),e(this._element).removeClass(v.SHOW),e(this._element).off(m.CLICK_DISMISS),e(this._dialog).off(m.MOUSEDOWN_DISMISS),i?e(this._element).one(o.TRANSITION_END,function(e){return n._hideModal(e)}).emulateTransitionEnd(f):this._hideModal())},u.prototype.dispose=function(){e.removeData(this._element,a),e(window,document,this._element,this._backdrop).off(l),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._originalBodyPadding=null,this._scrollbarWidth=null},u.prototype._getConfig=function(n){return n=e.extend({},p,n),o.typeCheckConfig(t,n,g),n},u.prototype._showElement=function(t){var n=this,i=o.supportsTransitionEnd()&&e(this._element).hasClass(v.FADE);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,i&&o.reflow(this._element),e(this._element).addClass(v.SHOW),this._config.focus&&this._enforceFocus();var r=e.Event(m.SHOWN,{relatedTarget:t}),s=function(){n._config.focus&&n._element.focus(),n._isTransitioning=!1,e(n._element).trigger(r)};i?e(this._dialog).one(o.TRANSITION_END,s).emulateTransitionEnd(f):s()},u.prototype._enforceFocus=function(){var t=this;e(document).off(m.FOCUSIN).on(m.FOCUSIN,function(n){document===n.target||t._element===n.target||e(t._element).has(n.target).length||t._element.focus()})},u.prototype._setEscapeEvent=function(){var t=this;this._isShown&&this._config.keyboard?e(this._element).on(m.KEYDOWN_DISMISS,function(e){e.which===h&&t.hide()}):this._isShown||e(this._element).off(m.KEYDOWN_DISMISS)},u.prototype._setResizeEvent=function(){var t=this;this._isShown?e(window).on(m.RESIZE,function(e){return t._handleUpdate(e)}):e(window).off(m.RESIZE)},u.prototype._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden","true"),this._isTransitioning=!1,this._showBackdrop(function(){e(document.body).removeClass(v.OPEN),t._resetAdjustments(),t._resetScrollbar(),e(t._element).trigger(m.HIDDEN)})},u.prototype._removeBackdrop=function(){this._backdrop&&(e(this._backdrop).remove(),this._backdrop=null)},u.prototype._showBackdrop=function(t){var n=this,i=e(this._element).hasClass(v.FADE)?v.FADE:"";if(this._isShown&&this._config.backdrop){var r=o.supportsTransitionEnd()&&i;if(this._backdrop=document.createElement("div"),this._backdrop.className=v.BACKDROP,i&&e(this._backdrop).addClass(i),e(this._backdrop).appendTo(document.body),e(this._element).on(m.CLICK_DISMISS,function(e){return n._ignoreBackdropClick?void(n._ignoreBackdropClick=!1):void(e.target===e.currentTarget&&("static"===n._config.backdrop?n._element.focus():n.hide()))}),r&&o.reflow(this._backdrop),e(this._backdrop).addClass(v.SHOW),!t)return;if(!r)return void t();e(this._backdrop).one(o.TRANSITION_END,t).emulateTransitionEnd(d)}else if(!this._isShown&&this._backdrop){e(this._backdrop).removeClass(v.SHOW);var s=function(){n._removeBackdrop(),t&&t()};o.supportsTransitionEnd()&&e(this._element).hasClass(v.FADE)?e(this._backdrop).one(o.TRANSITION_END,s).emulateTransitionEnd(d):s()}else t&&t()},u.prototype._handleUpdate=function(){this._adjustDialog()},u.prototype._adjustDialog=function(){var e=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&e&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!e&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},u.prototype._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},u.prototype._checkScrollbar=function(){this._isBodyOverflowing=document.body.clientWidth<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},u.prototype._setScrollbar=function(){var t=parseInt(e(y.FIXED_CONTENT).css("padding-right")||0,10);this._originalBodyPadding=document.body.style.paddingRight||"",this._isBodyOverflowing&&(document.body.style.paddingRight=t+this._scrollbarWidth+"px")},u.prototype._resetScrollbar=function(){document.body.style.paddingRight=this._originalBodyPadding},u.prototype._getScrollbarWidth=function(){var e=document.createElement("div");e.className=v.SCROLLBAR_MEASURER,document.body.appendChild(e);var t=e.offsetWidth-e.clientWidth;return document.body.removeChild(e),t},u._jQueryInterface=function(t,n){return this.each(function(){var r=e(this).data(a),o=e.extend({},u.Default,e(this).data(),"object"===("undefined"==typeof t?"undefined":i(t))&&t);if(r||(r=new u(this,o),e(this).data(a,r)),"string"==typeof t){if(void 0===r[t])throw new Error('No method named "'+t+'"');r[t](n)}else o.show&&r.show(n)})},r(u,null,[{key:"VERSION",get:function(){return s}},{key:"Default",get:function(){return p}}]),u}();return e(document).on(m.CLICK_DATA_API,y.DATA_TOGGLE,function(t){var n=this,i=void 0,r=o.getSelectorFromElement(this);r&&(i=e(r)[0]);var s=e(i).data(a)?"toggle":e.extend({},e(i).data(),e(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var l=e(i).one(m.SHOW,function(t){t.isDefaultPrevented()||l.one(m.HIDDEN,function(){e(n).is(":visible")&&n.focus()})});_._jQueryInterface.call(e(i),s,this)}),e.fn[t]=_._jQueryInterface,e.fn[t].Constructor=_,e.fn[t].noConflict=function(){return e.fn[t]=c,_._jQueryInterface},_}(jQuery),function(e){var t="scrollspy",s="4.0.0-alpha.6",a="bs.scrollspy",l="."+a,u=".data-api",c=e.fn[t],f={offset:10,method:"auto",target:""},d={offset:"number",method:"string",target:"(string|element)"},h={ACTIVATE:"activate"+l,SCROLL:"scroll"+l,LOAD_DATA_API:"load"+l+u},p={DROPDOWN_ITEM:"dropdown-item",DROPDOWN_MENU:"dropdown-menu",NAV_LINK:"nav-link",NAV:"nav",ACTIVE:"active"},g={DATA_SPY:'[data-spy="scroll"]',ACTIVE:".active",LIST_ITEM:".list-item",LI:"li",LI_DROPDOWN:"li.dropdown",NAV_LINKS:".nav-link",DROPDOWN:".dropdown",DROPDOWN_ITEMS:".dropdown-item",DROPDOWN_TOGGLE:".dropdown-toggle"},m={OFFSET:"offset",POSITION:"position"},v=function(){function u(t,i){var r=this;n(this,u),this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(i),this._selector=this._config.target+" "+g.NAV_LINKS+","+(this._config.target+" "+g.DROPDOWN_ITEMS),this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,e(this._scrollElement).on(h.SCROLL,function(e){return r._process(e)}),this.refresh(),this._process()}return u.prototype.refresh=function(){var t=this,n=this._scrollElement!==this._scrollElement.window?m.POSITION:m.OFFSET,i="auto"===this._config.method?n:this._config.method,r=i===m.POSITION?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight();var s=e.makeArray(e(this._selector));s.map(function(t){var n=void 0,s=o.getSelectorFromElement(t);return s&&(n=e(s)[0]),n&&(n.offsetWidth||n.offsetHeight)?[e(n)[i]().top+r,s]:null}).filter(function(e){return e}).sort(function(e,t){return e[0]-t[0]}).forEach(function(e){t._offsets.push(e[0]),t._targets.push(e[1])})},u.prototype.dispose=function(){e.removeData(this._element,a),e(this._scrollElement).off(l),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},u.prototype._getConfig=function(n){if(n=e.extend({},f,n),"string"!=typeof n.target){var i=e(n.target).attr("id");i||(i=o.getUID(t),e(n.target).attr("id",i)),n.target="#"+i}return o.typeCheckConfig(t,n,d),n},u.prototype._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},u.prototype._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},u.prototype._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.offsetHeight},u.prototype._process=function(){var e=this._getScrollTop()+this._config.offset,t=this._getScrollHeight(),n=this._config.offset+t-this._getOffsetHeight();if(this._scrollHeight!==t&&this.refresh(),e>=n){var i=this._targets[this._targets.length-1];return void(this._activeTarget!==i&&this._activate(i))}if(this._activeTarget&&e<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var r=this._offsets.length;r--;){var o=this._activeTarget!==this._targets[r]&&e>=this._offsets[r]&&(void 0===this._offsets[r+1]||e<this._offsets[r+1]);o&&this._activate(this._targets[r])}},u.prototype._activate=function(t){this._activeTarget=t,this._clear();var n=this._selector.split(",");n=n.map(function(e){return e+'[data-target="'+t+'"],'+(e+'[href="'+t+'"]')});var i=e(n.join(","));i.hasClass(p.DROPDOWN_ITEM)?(i.closest(g.DROPDOWN).find(g.DROPDOWN_TOGGLE).addClass(p.ACTIVE),i.addClass(p.ACTIVE)):i.parents(g.LI).find("> "+g.NAV_LINKS).addClass(p.ACTIVE),e(this._scrollElement).trigger(h.ACTIVATE,{relatedTarget:t})},u.prototype._clear=function(){e(this._selector).filter(g.ACTIVE).removeClass(p.ACTIVE)},u._jQueryInterface=function(t){return this.each(function(){var n=e(this).data(a),r="object"===("undefined"==typeof t?"undefined":i(t))&&t;if(n||(n=new u(this,r),e(this).data(a,n)),"string"==typeof t){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},r(u,null,[{key:"VERSION",get:function(){return s}},{key:"Default",get:function(){return f}}]),u}();return e(window).on(h.LOAD_DATA_API,function(){for(var t=e.makeArray(e(g.DATA_SPY)),n=t.length;n--;){var i=e(t[n]);v._jQueryInterface.call(i,i.data())}}),e.fn[t]=v._jQueryInterface,e.fn[t].Constructor=v,e.fn[t].noConflict=function(){return e.fn[t]=c,v._jQueryInterface},v}(jQuery),function(e){var t="tab",i="4.0.0-alpha.6",s="bs.tab",a="."+s,l=".data-api",u=e.fn[t],c=150,f={HIDE:"hide"+a,HIDDEN:"hidden"+a,SHOW:"show"+a,SHOWN:"shown"+a,CLICK_DATA_API:"click"+a+l},d={DROPDOWN_MENU:"dropdown-menu",ACTIVE:"active",DISABLED:"disabled",FADE:"fade",SHOW:"show"},h={A:"a",LI:"li",DROPDOWN:".dropdown",LIST:"ul:not(.dropdown-menu), ol:not(.dropdown-menu), nav:not(.dropdown-menu)",FADE_CHILD:"> .nav-item .fade, > .fade",ACTIVE:".active",ACTIVE_CHILD:"> .nav-item > .active, > .active",DATA_TOGGLE:'[data-toggle="tab"], [data-toggle="pill"]',DROPDOWN_TOGGLE:".dropdown-toggle",DROPDOWN_ACTIVE_CHILD:"> .dropdown-menu .active"},p=function(){function t(e){n(this,t),this._element=e}return t.prototype.show=function(){var t=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&e(this._element).hasClass(d.ACTIVE)||e(this._element).hasClass(d.DISABLED))){var n=void 0,i=void 0,r=e(this._element).closest(h.LIST)[0],s=o.getSelectorFromElement(this._element);r&&(i=e.makeArray(e(r).find(h.ACTIVE)),i=i[i.length-1]);var a=e.Event(f.HIDE,{relatedTarget:this._element}),l=e.Event(f.SHOW,{relatedTarget:i});if(i&&e(i).trigger(a),e(this._element).trigger(l),!l.isDefaultPrevented()&&!a.isDefaultPrevented()){s&&(n=e(s)[0]),this._activate(this._element,r);var u=function(){var n=e.Event(f.HIDDEN,{relatedTarget:t._element}),r=e.Event(f.SHOWN,{relatedTarget:i});e(i).trigger(n),e(t._element).trigger(r)};n?this._activate(n,n.parentNode,u):u()}}},t.prototype.dispose=function(){e.removeClass(this._element,s),this._element=null},t.prototype._activate=function(t,n,i){var r=this,s=e(n).find(h.ACTIVE_CHILD)[0],a=i&&o.supportsTransitionEnd()&&(s&&e(s).hasClass(d.FADE)||Boolean(e(n).find(h.FADE_CHILD)[0])),l=function(){return r._transitionComplete(t,s,a,i)};s&&a?e(s).one(o.TRANSITION_END,l).emulateTransitionEnd(c):l(),s&&e(s).removeClass(d.SHOW)},t.prototype._transitionComplete=function(t,n,i,r){if(n){e(n).removeClass(d.ACTIVE);var s=e(n.parentNode).find(h.DROPDOWN_ACTIVE_CHILD)[0];s&&e(s).removeClass(d.ACTIVE),n.setAttribute("aria-expanded",!1)}if(e(t).addClass(d.ACTIVE),t.setAttribute("aria-expanded",!0),i?(o.reflow(t),e(t).addClass(d.SHOW)):e(t).removeClass(d.FADE),t.parentNode&&e(t.parentNode).hasClass(d.DROPDOWN_MENU)){var a=e(t).closest(h.DROPDOWN)[0];a&&e(a).find(h.DROPDOWN_TOGGLE).addClass(d.ACTIVE),t.setAttribute("aria-expanded",!0)}r&&r()},t._jQueryInterface=function(n){return this.each(function(){var i=e(this),r=i.data(s);if(r||(r=new t(this),i.data(s,r)),"string"==typeof n){if(void 0===r[n])throw new Error('No method named "'+n+'"');r[n]()}})},r(t,null,[{key:"VERSION",get:function(){return i}}]),t}();return e(document).on(f.CLICK_DATA_API,h.DATA_TOGGLE,function(t){t.preventDefault(),p._jQueryInterface.call(e(this),"show")}),e.fn[t]=p._jQueryInterface,e.fn[t].Constructor=p,e.fn[t].noConflict=function(){return e.fn[t]=u,p._jQueryInterface},p}(jQuery),function(e){"undefined"==typeof Tether;var t="tooltip",s="4.0.0-alpha.6",a="bs.tooltip",l="."+a,u=e.fn[t],c=150,f="bs-tether",d={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:"0 0",constraints:[],container:!1},h={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"string",constraints:"array",container:"(string|element|boolean)"},p={TOP:"bottom center",RIGHT:"middle left",BOTTOM:"top center",LEFT:"middle right"},g={SHOW:"show",OUT:"out"},m={HIDE:"hide"+l,HIDDEN:"hidden"+l,SHOW:"show"+l,SHOWN:"shown"+l,INSERTED:"inserted"+l,CLICK:"click"+l,FOCUSIN:"focusin"+l,FOCUSOUT:"focusout"+l,MOUSEENTER:"mouseenter"+l,MOUSELEAVE:"mouseleave"+l},v={FADE:"fade",SHOW:"show"},y={TOOLTIP:".tooltip",TOOLTIP_INNER:".tooltip-inner"},_={element:!1,enabled:!1},T={HOVER:"hover",FOCUS:"focus",CLICK:"click",MANUAL:"manual"},E=function(){function u(e,t){n(this,u),this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._isTransitioning=!1,this._tether=null,this.element=e,this.config=this._getConfig(t),this.tip=null,this._setListeners()}return u.prototype.enable=function(){this._isEnabled=!0},u.prototype.disable=function(){this._isEnabled=!1},u.prototype.toggleEnabled=function(){this._isEnabled=!this._isEnabled},u.prototype.toggle=function(t){if(t){var n=this.constructor.DATA_KEY,i=e(t.currentTarget).data(n);i||(i=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(n,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if(e(this.getTipElement()).hasClass(v.SHOW))return void this._leave(null,this);this._enter(null,this)}},u.prototype.dispose=function(){clearTimeout(this._timeout),this.cleanupTether(),e.removeData(this.element,this.constructor.DATA_KEY),e(this.element).off(this.constructor.EVENT_KEY),e(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&e(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._tether=null,this.element=null,this.config=null,this.tip=null},u.prototype.show=function(){var t=this;if("none"===e(this.element).css("display"))throw new Error("Please use show on visible elements");var n=e.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){if(this._isTransitioning)throw new Error("Tooltip is transitioning");e(this.element).trigger(n);var i=e.contains(this.element.ownerDocument.documentElement,this.element);if(n.isDefaultPrevented()||!i)return;var r=this.getTipElement(),s=o.getUID(this.constructor.NAME);r.setAttribute("id",s),this.element.setAttribute("aria-describedby",s),this.setContent(),this.config.animation&&e(r).addClass(v.FADE);var a="function"==typeof this.config.placement?this.config.placement.call(this,r,this.element):this.config.placement,l=this._getAttachment(a),c=this.config.container===!1?document.body:e(this.config.container);e(r).data(this.constructor.DATA_KEY,this).appendTo(c),e(this.element).trigger(this.constructor.Event.INSERTED),this._tether=new Tether({attachment:l,element:r,target:this.element,classes:_,classPrefix:f,offset:this.config.offset,constraints:this.config.constraints,addTargetClasses:!1}),o.reflow(r),this._tether.position(),e(r).addClass(v.SHOW);var d=function(){var n=t._hoverState;t._hoverState=null,t._isTransitioning=!1,e(t.element).trigger(t.constructor.Event.SHOWN),n===g.OUT&&t._leave(null,t)};if(o.supportsTransitionEnd()&&e(this.tip).hasClass(v.FADE))return this._isTransitioning=!0,void e(this.tip).one(o.TRANSITION_END,d).emulateTransitionEnd(u._TRANSITION_DURATION);d()}},u.prototype.hide=function(t){var n=this,i=this.getTipElement(),r=e.Event(this.constructor.Event.HIDE);if(this._isTransitioning)throw new Error("Tooltip is transitioning");var s=function(){n._hoverState!==g.SHOW&&i.parentNode&&i.parentNode.removeChild(i),n.element.removeAttribute("aria-describedby"),e(n.element).trigger(n.constructor.Event.HIDDEN),n._isTransitioning=!1,n.cleanupTether(),t&&t()};e(this.element).trigger(r),r.isDefaultPrevented()||(e(i).removeClass(v.SHOW),
this._activeTrigger[T.CLICK]=!1,this._activeTrigger[T.FOCUS]=!1,this._activeTrigger[T.HOVER]=!1,o.supportsTransitionEnd()&&e(this.tip).hasClass(v.FADE)?(this._isTransitioning=!0,e(i).one(o.TRANSITION_END,s).emulateTransitionEnd(c)):s(),this._hoverState="")},u.prototype.isWithContent=function(){return Boolean(this.getTitle())},u.prototype.getTipElement=function(){return this.tip=this.tip||e(this.config.template)[0]},u.prototype.setContent=function(){var t=e(this.getTipElement());this.setElementContent(t.find(y.TOOLTIP_INNER),this.getTitle()),t.removeClass(v.FADE+" "+v.SHOW),this.cleanupTether()},u.prototype.setElementContent=function(t,n){var r=this.config.html;"object"===("undefined"==typeof n?"undefined":i(n))&&(n.nodeType||n.jquery)?r?e(n).parent().is(t)||t.empty().append(n):t.text(e(n).text()):t[r?"html":"text"](n)},u.prototype.getTitle=function(){var e=this.element.getAttribute("data-original-title");return e||(e="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),e},u.prototype.cleanupTether=function(){this._tether&&this._tether.destroy()},u.prototype._getAttachment=function(e){return p[e.toUpperCase()]},u.prototype._setListeners=function(){var t=this,n=this.config.trigger.split(" ");n.forEach(function(n){if("click"===n)e(t.element).on(t.constructor.Event.CLICK,t.config.selector,function(e){return t.toggle(e)});else if(n!==T.MANUAL){var i=n===T.HOVER?t.constructor.Event.MOUSEENTER:t.constructor.Event.FOCUSIN,r=n===T.HOVER?t.constructor.Event.MOUSELEAVE:t.constructor.Event.FOCUSOUT;e(t.element).on(i,t.config.selector,function(e){return t._enter(e)}).on(r,t.config.selector,function(e){return t._leave(e)})}e(t.element).closest(".modal").on("hide.bs.modal",function(){return t.hide()})}),this.config.selector?this.config=e.extend({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},u.prototype._fixTitle=function(){var e=i(this.element.getAttribute("data-original-title"));(this.element.getAttribute("title")||"string"!==e)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},u.prototype._enter=function(t,n){var i=this.constructor.DATA_KEY;return n=n||e(t.currentTarget).data(i),n||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(i,n)),t&&(n._activeTrigger["focusin"===t.type?T.FOCUS:T.HOVER]=!0),e(n.getTipElement()).hasClass(v.SHOW)||n._hoverState===g.SHOW?void(n._hoverState=g.SHOW):(clearTimeout(n._timeout),n._hoverState=g.SHOW,n.config.delay&&n.config.delay.show?void(n._timeout=setTimeout(function(){n._hoverState===g.SHOW&&n.show()},n.config.delay.show)):void n.show())},u.prototype._leave=function(t,n){var i=this.constructor.DATA_KEY;if(n=n||e(t.currentTarget).data(i),n||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(i,n)),t&&(n._activeTrigger["focusout"===t.type?T.FOCUS:T.HOVER]=!1),!n._isWithActiveTrigger())return clearTimeout(n._timeout),n._hoverState=g.OUT,n.config.delay&&n.config.delay.hide?void(n._timeout=setTimeout(function(){n._hoverState===g.OUT&&n.hide()},n.config.delay.hide)):void n.hide()},u.prototype._isWithActiveTrigger=function(){for(var e in this._activeTrigger)if(this._activeTrigger[e])return!0;return!1},u.prototype._getConfig=function(n){return n=e.extend({},this.constructor.Default,e(this.element).data(),n),n.delay&&"number"==typeof n.delay&&(n.delay={show:n.delay,hide:n.delay}),o.typeCheckConfig(t,n,this.constructor.DefaultType),n},u.prototype._getDelegateConfig=function(){var e={};if(this.config)for(var t in this.config)this.constructor.Default[t]!==this.config[t]&&(e[t]=this.config[t]);return e},u._jQueryInterface=function(t){return this.each(function(){var n=e(this).data(a),r="object"===("undefined"==typeof t?"undefined":i(t))&&t;if((n||!/dispose|hide/.test(t))&&(n||(n=new u(this,r),e(this).data(a,n)),"string"==typeof t)){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},r(u,null,[{key:"VERSION",get:function(){return s}},{key:"Default",get:function(){return d}},{key:"NAME",get:function(){return t}},{key:"DATA_KEY",get:function(){return a}},{key:"Event",get:function(){return m}},{key:"EVENT_KEY",get:function(){return l}},{key:"DefaultType",get:function(){return h}}]),u}();return e.fn[t]=E._jQueryInterface,e.fn[t].Constructor=E,e.fn[t].noConflict=function(){return e.fn[t]=u,E._jQueryInterface},E}(jQuery));!function(o){var a="popover",l="4.0.0-alpha.6",u="bs.popover",c="."+u,f=o.fn[a],d=o.extend({},s.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),h=o.extend({},s.DefaultType,{content:"(string|element|function)"}),p={FADE:"fade",SHOW:"show"},g={TITLE:".popover-title",CONTENT:".popover-content"},m={HIDE:"hide"+c,HIDDEN:"hidden"+c,SHOW:"show"+c,SHOWN:"shown"+c,INSERTED:"inserted"+c,CLICK:"click"+c,FOCUSIN:"focusin"+c,FOCUSOUT:"focusout"+c,MOUSEENTER:"mouseenter"+c,MOUSELEAVE:"mouseleave"+c},v=function(s){function f(){return n(this,f),e(this,s.apply(this,arguments))}return t(f,s),f.prototype.isWithContent=function(){return this.getTitle()||this._getContent()},f.prototype.getTipElement=function(){return this.tip=this.tip||o(this.config.template)[0]},f.prototype.setContent=function(){var e=o(this.getTipElement());this.setElementContent(e.find(g.TITLE),this.getTitle()),this.setElementContent(e.find(g.CONTENT),this._getContent()),e.removeClass(p.FADE+" "+p.SHOW),this.cleanupTether()},f.prototype._getContent=function(){return this.element.getAttribute("data-content")||("function"==typeof this.config.content?this.config.content.call(this.element):this.config.content)},f._jQueryInterface=function(e){return this.each(function(){var t=o(this).data(u),n="object"===("undefined"==typeof e?"undefined":i(e))?e:null;if((t||!/destroy|hide/.test(e))&&(t||(t=new f(this,n),o(this).data(u,t)),"string"==typeof e)){if(void 0===t[e])throw new Error('No method named "'+e+'"');t[e]()}})},r(f,null,[{key:"VERSION",get:function(){return l}},{key:"Default",get:function(){return d}},{key:"NAME",get:function(){return a}},{key:"DATA_KEY",get:function(){return u}},{key:"Event",get:function(){return m}},{key:"EVENT_KEY",get:function(){return c}},{key:"DefaultType",get:function(){return h}}]),f}(s);return o.fn[a]=v._jQueryInterface,o.fn[a].Constructor=v,o.fn[a].noConflict=function(){return o.fn[a]=f,v._jQueryInterface},v}(jQuery)}(),!function(e,t){function n(e){return"object"===t.type(e)}function i(e){return"string"===t.type(e)&&t.trim(e).length>0}function r(e,t,n,i){i(e[n])||(e[n]=t[n])}t.fn.extend({scrollspy:function(s,a){if(i(s)){var l=a;a=s,s=l}s=t.extend({},o,s),r(s,o,"container",n);var u=t(s.container);if(0===u.length)return this;if(r(s,o,"namespace",i),i(a)&&"DESTROY"===a.toUpperCase())return u.off("scroll."+s.namespace),this;r(s,o,"buffer",t.isNumeric),r(s,o,"max",t.isNumeric),r(s,o,"min",t.isNumeric),r(s,o,"onEnter",t.isFunction),r(s,o,"onLeave",t.isFunction),r(s,o,"onLeaveTop",t.isFunction),r(s,o,"onLeaveBottom",t.isFunction),r(s,o,"onTick",t.isFunction),t.isFunction(s.max)&&(s.max=s.max()),t.isFunction(s.min)&&(s.min=s.min());var c="VERTICAL"===e.String(s.mode).toUpperCase();return this.each(function(){var e=this,n=t(e),i=0,r=!1,o=0;u.on("scroll."+s.namespace,function(){var a=t(this),l={top:a.scrollTop(),left:a.scrollLeft()},f=u.height(),d=s.max,h=s.min,p=c?l.top+s.buffer:l.left+s.buffer;if(0===d&&(d=c?f:u.outerWidth()+n.outerWidth()),p>=h&&d>=p)r||(r=!0,i++,n.trigger("scrollEnter",{position:l}),null!==s.onEnter&&s.onEnter(e,l)),n.trigger("scrollTick",{position:l,inside:r,enters:i,leaves:o}),null!==s.onTick&&s.onTick(e,l,r,i,o);else if(r)r=!1,o++,n.trigger("scrollLeave",{position:l,leaves:o}),null!==s.onLeave&&s.onLeave(e,l),h>=p?(n.trigger("scrollLeaveTop",{position:l,leaves:o}),null!==s.onLeaveTop&&s.onLeaveTop(e,l)):p>=d&&(n.trigger("scrollLeaveBottom",{position:l,leaves:o}),null!==s.onLeaveBottom&&s.onLeaveBottom(e,l));else{var g=u.scrollTop(),m=n.height(),v=n.offset().top;f+g>v&&v>g-m&&(n.trigger("scrollView",{position:l}),null!==s.onView&&s.onView(e,l))}})})}});var o={buffer:0,container:e,max:0,min:0,mode:"vertical",namespace:"scrollspy",onEnter:null,onLeave:null,onLeaveTop:null,onLeaveBottom:null,onTick:null,onView:null}}(window,window.jQuery),!function(){"use strict";function e(i){if(!i)throw new Error("No options passed to Waypoint constructor");if(!i.element)throw new Error("No element option passed to Waypoint constructor");if(!i.handler)throw new Error("No handler option passed to Waypoint constructor");this.key="waypoint-"+t,this.options=e.Adapter.extend({},e.defaults,i),this.element=this.options.element,this.adapter=new e.Adapter(this.element),this.callback=i.handler,this.axis=this.options.horizontal?"horizontal":"vertical",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=e.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=e.Context.findOrCreateByElement(this.options.context),e.offsetAliases[this.options.offset]&&(this.options.offset=e.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),n[this.key]=this,t+=1}var t=0,n={};e.prototype.queueTrigger=function(e){this.group.queueTrigger(this,e)},e.prototype.trigger=function(e){this.enabled&&this.callback&&this.callback.apply(this,e)},e.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete n[this.key]},e.prototype.disable=function(){return this.enabled=!1,this},e.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},e.prototype.next=function(){return this.group.next(this)},e.prototype.previous=function(){return this.group.previous(this)},e.invokeAll=function(e){var t=[];for(var i in n)t.push(n[i]);for(var r=0,o=t.length;o>r;r++)t[r][e]()},e.destroyAll=function(){e.invokeAll("destroy")},e.disableAll=function(){e.invokeAll("disable")},e.enableAll=function(){e.Context.refreshAll();for(var t in n)n[t].enabled=!0;return this},e.refreshAll=function(){e.Context.refreshAll()},e.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},e.viewportWidth=function(){return document.documentElement.clientWidth},e.adapters=[],e.defaults={context:window,continuous:!0,enabled:!0,group:"default",horizontal:!1,offset:0},e.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=e}(),function(){"use strict";function e(e){window.setTimeout(e,1e3/60)}function t(e){this.element=e,this.Adapter=r.Adapter,this.adapter=new this.Adapter(e),this.key="waypoint-context-"+n,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},e.waypointContextKey=this.key,i[e.waypointContextKey]=this,n+=1,r.windowContext||(r.windowContext=!0,r.windowContext=new t(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var n=0,i={},r=window.Waypoint,o=window.onload;t.prototype.add=function(e){var t=e.options.horizontal?"horizontal":"vertical";this.waypoints[t][e.key]=e,this.refresh()},t.prototype.checkEmpty=function(){var e=this.Adapter.isEmptyObject(this.waypoints.horizontal),t=this.Adapter.isEmptyObject(this.waypoints.vertical),n=this.element==this.element.window;e&&t&&!n&&(this.adapter.off(".waypoints"),delete i[this.key])},t.prototype.createThrottledResizeHandler=function(){function e(){t.handleResize(),t.didResize=!1}var t=this;this.adapter.on("resize.waypoints",function(){t.didResize||(t.didResize=!0,r.requestAnimationFrame(e))})},t.prototype.createThrottledScrollHandler=function(){function e(){t.handleScroll(),t.didScroll=!1}var t=this;this.adapter.on("scroll.waypoints",function(){(!t.didScroll||r.isTouch)&&(t.didScroll=!0,r.requestAnimationFrame(e))})},t.prototype.handleResize=function(){r.Context.refreshAll()},t.prototype.handleScroll=function(){var e={},t={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};for(var n in t){var i=t[n],r=i.newScroll>i.oldScroll,o=r?i.forward:i.backward;for(var s in this.waypoints[n]){var a=this.waypoints[n][s];if(null!==a.triggerPoint){var l=i.oldScroll<a.triggerPoint,u=i.newScroll>=a.triggerPoint,c=l&&u,f=!l&&!u;(c||f)&&(a.queueTrigger(o),e[a.group.id]=a.group)}}}for(var d in e)e[d].flushTriggers();this.oldScroll={x:t.horizontal.newScroll,y:t.vertical.newScroll}},t.prototype.innerHeight=function(){return this.element==this.element.window?r.viewportHeight():this.adapter.innerHeight()},t.prototype.remove=function(e){delete this.waypoints[e.axis][e.key],this.checkEmpty()},t.prototype.innerWidth=function(){return this.element==this.element.window?r.viewportWidth():this.adapter.innerWidth()},t.prototype.destroy=function(){var e=[];for(var t in this.waypoints)for(var n in this.waypoints[t])e.push(this.waypoints[t][n]);for(var i=0,r=e.length;r>i;i++)e[i].destroy()},t.prototype.refresh=function(){var e,t=this.element==this.element.window,n=t?void 0:this.adapter.offset(),i={};this.handleScroll(),e={horizontal:{contextOffset:t?0:n.left,contextScroll:t?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:t?0:n.top,contextScroll:t?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}};for(var o in e){var s=e[o];for(var a in this.waypoints[o]){var l,u,c,f,d,h=this.waypoints[o][a],p=h.options.offset,g=h.triggerPoint,m=0,v=null==g;h.element!==h.element.window&&(m=h.adapter.offset()[s.offsetProp]),"function"==typeof p?p=p.apply(h):"string"==typeof p&&(p=parseFloat(p),h.options.offset.indexOf("%")>-1&&(p=Math.ceil(s.contextDimension*p/100))),l=s.contextScroll-s.contextOffset,h.triggerPoint=Math.floor(m+l-p),u=g<s.oldScroll,c=h.triggerPoint>=s.oldScroll,f=u&&c,d=!u&&!c,!v&&f?(h.queueTrigger(s.backward),i[h.group.id]=h.group):!v&&d?(h.queueTrigger(s.forward),i[h.group.id]=h.group):v&&s.oldScroll>=h.triggerPoint&&(h.queueTrigger(s.forward),i[h.group.id]=h.group)}}return r.requestAnimationFrame(function(){for(var e in i)i[e].flushTriggers()}),this},t.findOrCreateByElement=function(e){return t.findByElement(e)||new t(e)},t.refreshAll=function(){for(var e in i)i[e].refresh()},t.findByElement=function(e){return i[e.waypointContextKey]},window.onload=function(){o&&o(),t.refreshAll()},r.requestAnimationFrame=function(t){var n=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||e;n.call(window,t)},r.Context=t}(),function(){"use strict";function e(e,t){return e.triggerPoint-t.triggerPoint}function t(e,t){return t.triggerPoint-e.triggerPoint}function n(e){this.name=e.name,this.axis=e.axis,this.id=this.name+"-"+this.axis,this.waypoints=[],this.clearTriggerQueues(),i[this.axis][this.name]=this}var i={vertical:{},horizontal:{}},r=window.Waypoint;n.prototype.add=function(e){this.waypoints.push(e)},n.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},n.prototype.flushTriggers=function(){for(var n in this.triggerQueues){var i=this.triggerQueues[n],r="up"===n||"left"===n;i.sort(r?t:e);for(var o=0,s=i.length;s>o;o+=1){var a=i[o];(a.options.continuous||o===i.length-1)&&a.trigger([n])}}this.clearTriggerQueues()},n.prototype.next=function(t){this.waypoints.sort(e);var n=r.Adapter.inArray(t,this.waypoints),i=n===this.waypoints.length-1;return i?null:this.waypoints[n+1]},n.prototype.previous=function(t){this.waypoints.sort(e);var n=r.Adapter.inArray(t,this.waypoints);return n?this.waypoints[n-1]:null},n.prototype.queueTrigger=function(e,t){this.triggerQueues[t].push(e)},n.prototype.remove=function(e){var t=r.Adapter.inArray(e,this.waypoints);t>-1&&this.waypoints.splice(t,1)},n.prototype.first=function(){return this.waypoints[0]},n.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},n.findOrCreate=function(e){return i[e.axis][e.name]||new n(e)},r.Group=n}(),function(){"use strict";function e(e){this.$element=t(e)}var t=window.jQuery,n=window.Waypoint;t.each(["innerHeight","innerWidth","off","offset","on","outerHeight","outerWidth","scrollLeft","scrollTop"],function(t,n){e.prototype[n]=function(){var e=Array.prototype.slice.call(arguments);return this.$element[n].apply(this.$element,e)}}),t.each(["extend","inArray","isEmptyObject"],function(n,i){e[i]=t[i]}),n.adapters.push({name:"jquery",Adapter:e}),n.Adapter=e}(),function(){"use strict";function e(e){return function(){var n=[],i=arguments[0];return e.isFunction(arguments[0])&&(i=e.extend({},arguments[1]),i.handler=arguments[0]),this.each(function(){var r=e.extend({},i,{element:this});"string"==typeof r.context&&(r.context=e(this).closest(r.context)[0]),n.push(new t(r))}),n}}var t=window.Waypoint;window.jQuery&&(window.jQuery.fn.waypoint=e(window.jQuery)),window.Zepto&&(window.Zepto.fn.waypoint=e(window.Zepto))}(),!function(e,t,n){"use strict";function i(n){if(r=t.documentElement,o=t.body,$(),ae=this,n=n||{},de=n.constants||{},n.easing)for(var i in n.easing)G[i]=n.easing[i];_e=n.edgeStrategy||"set",ce={beforerender:n.beforerender,render:n.render,keyframe:n.keyframe},fe=n.forceHeight!==!1,fe&&(Pe=n.scale||1),he=n.mobileDeceleration||C,ge=n.smoothScrolling!==!1,me=n.smoothScrollingDuration||A,ve={targetTop:ae.getScrollTop()},Ue=(n.mobileCheck||function(){return/Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent||navigator.vendor||e.opera)})(),Ue?(ue=t.getElementById(n.skrollrBody||x),ue&&se(),z(),Oe(r,[y,E],[_])):Oe(r,[y,T],[_]),ae.refresh(),we(e,"resize orientationchange",function(){var e=r.clientWidth,t=r.clientHeight;(t!==qe||e!==Me)&&(qe=t,Me=e,Be=!0)});var s=Q();return function a(){J(),Ee=s(a)}(),ae}var r,o,s={get:function(){return ae},init:function(e){return ae||new i(e)},VERSION:"0.6.30"},a=Object.prototype.hasOwnProperty,l=e.Math,u=e.getComputedStyle,c="touchstart",f="touchmove",d="touchcancel",h="touchend",p="skrollable",g=p+"-before",m=p+"-between",v=p+"-after",y="skrollr",_="no-"+y,T=y+"-desktop",E=y+"-mobile",w="linear",b=1e3,C=.004,x="skrollr-body",A=200,S="start",D="end",I="center",O="bottom",N="___skrollable_id",k=/^(?:input|textarea|button|select)$/i,L=/^\s+|\s+$/g,H=/^data(?:-(_\w+))?(?:-?(-?\d*\.?\d+p?))?(?:-?(start|end|top|center|bottom))?(?:-?(top|center|bottom))?$/,j=/\s*(@?[\w\-\[\]]+)\s*:\s*(.+?)\s*(?:;|$)/gi,P=/^(@?[a-z\-]+)\[(\w+)\]$/,R=/-([a-z0-9_])/g,W=function(e,t){return t.toUpperCase()},F=/[\-+]?[\d]*\.?[\d]+/g,M=/\{\?\}/g,q=/rgba?\(\s*-?\d+\s*,\s*-?\d+\s*,\s*-?\d+/g,B=/[a-z\-]+-gradient/g,V="",U="",$=function(){var e=/^(?:O|Moz|webkit|ms)|(?:-(?:o|moz|webkit|ms)-)/;if(u){var t=u(o,null);for(var n in t)if(V=n.match(e)||+n==n&&t[n].match(e))break;if(!V)return void(V=U="");V=V[0],"-"===V.slice(0,1)?(U=V,V={"-webkit-":"webkit","-moz-":"Moz","-ms-":"ms","-o-":"O"}[V]):U="-"+V.toLowerCase()+"-"}},Q=function(){var t=e.requestAnimationFrame||e[V.toLowerCase()+"RequestAnimationFrame"],n=Le();return(Ue||!t)&&(t=function(t){var i=Le()-n,r=l.max(0,1e3/60-i);return e.setTimeout(function(){n=Le(),t()},r)}),t},K=function(){var t=e.cancelAnimationFrame||e[V.toLowerCase()+"CancelAnimationFrame"];return(Ue||!t)&&(t=function(t){return e.clearTimeout(t)}),t},G={begin:function(){return 0},end:function(){return 1},linear:function(e){return e},quadratic:function(e){return e*e},cubic:function(e){return e*e*e},swing:function(e){return-l.cos(e*l.PI)/2+.5},sqrt:function(e){return l.sqrt(e)},outCubic:function(e){return l.pow(e-1,3)+1},bounce:function(e){var t;if(.5083>=e)t=3;else if(.8489>=e)t=9;else if(.96208>=e)t=27;else{if(!(.99981>=e))return 1;t=91}return 1-l.abs(3*l.cos(e*t*1.028)/t)}};i.prototype.refresh=function(e){var i,r,o=!1;for(e===n?(o=!0,le=[],Ve=0,e=t.getElementsByTagName("*")):e.length===n&&(e=[e]),i=0,r=e.length;r>i;i++){var s=e[i],a=s,l=[],u=ge,c=_e,f=!1;if(o&&N in s&&delete s[N],s.attributes){for(var d=0,h=s.attributes.length;h>d;d++){var g=s.attributes[d];if("data-anchor-target"!==g.name)if("data-smooth-scrolling"!==g.name)if("data-edge-strategy"!==g.name)if("data-emit-events"!==g.name){var m=g.name.match(H);if(null!==m){var v={props:g.value,element:s,eventType:g.name.replace(R,W)};l.push(v);var y=m[1];y&&(v.constant=y.substr(1));var _=m[2];/p$/.test(_)?(v.isPercentage=!0,v.offset=(0|_.slice(0,-1))/100):v.offset=0|_;var T=m[3],E=m[4]||T;T&&T!==S&&T!==D?(v.mode="relative",v.anchors=[T,E]):(v.mode="absolute",T===D?v.isEnd=!0:v.isPercentage||(v.offset=v.offset*Pe))}}else f=!0;else c=g.value;else u="off"!==g.value;else if(a=t.querySelector(g.value),null===a)throw'Unable to find anchor target "'+g.value+'"'}if(l.length){var w,b,C;!o&&N in s?(C=s[N],w=le[C].styleAttr,b=le[C].classAttr):(C=s[N]=Ve++,w=s.style.cssText,b=Ie(s)),le[C]={element:s,styleAttr:w,classAttr:b,anchorTarget:a,keyFrames:l,smoothScrolling:u,edgeStrategy:c,emitEvents:f,lastFrameIndex:-1},Oe(s,[p],[])}}}for(Ae(),i=0,r=e.length;r>i;i++){var x=le[e[i][N]];x!==n&&(Z(x),te(x))}return ae},i.prototype.relativeToAbsolute=function(e,t,n){var i=r.clientHeight,o=e.getBoundingClientRect(),s=o.top,a=o.bottom-o.top;return t===O?s-=i:t===I&&(s-=i/2),n===O?s+=a:n===I&&(s+=a/2),s+=ae.getScrollTop(),s+.5|0},i.prototype.animateTo=function(e,t){t=t||{};var i=Le(),r=ae.getScrollTop(),o=t.duration===n?b:t.duration;return pe={startTop:r,topDiff:e-r,targetTop:e,duration:o,startTime:i,endTime:i+o,easing:G[t.easing||w],done:t.done},pe.topDiff||(pe.done&&pe.done.call(ae,!1),pe=n),ae},i.prototype.stopAnimateTo=function(){pe&&pe.done&&pe.done.call(ae,!0),pe=n},i.prototype.isAnimatingTo=function(){return!!pe},i.prototype.isMobile=function(){return Ue},i.prototype.setScrollTop=function(t,n){return ye=n===!0,Ue?$e=l.min(l.max(t,0),je):e.scrollTo(0,t),ae},i.prototype.getScrollTop=function(){return Ue?$e:e.pageYOffset||r.scrollTop||o.scrollTop||0},i.prototype.getMaxScrollTop=function(){return je},i.prototype.on=function(e,t){return ce[e]=t,ae},i.prototype.off=function(e){return delete ce[e],ae},i.prototype.destroy=function(){var e=K();e(Ee),Ce(),Oe(r,[_],[y,T,E]);for(var t=0,i=le.length;i>t;t++)oe(le[t].element);r.style.overflow=o.style.overflow="",r.style.height=o.style.height="",ue&&s.setStyle(ue,"transform","none"),ae=n,ue=n,ce=n,fe=n,je=0,Pe=1,de=n,he=n,Re="down",We=-1,Me=0,qe=0,Be=!1,pe=n,ge=n,me=n,ve=n,ye=n,Ve=0,_e=n,Ue=!1,$e=0,Te=n};var z=function(){var i,s,a,u,p,g,m,v,y,_,T,E;we(r,[c,f,d,h].join(" "),function(e){var r=e.changedTouches[0];for(u=e.target;3===u.nodeType;)u=u.parentNode;switch(p=r.clientY,g=r.clientX,_=e.timeStamp,k.test(u.tagName)||e.preventDefault(),e.type){case c:i&&i.blur(),ae.stopAnimateTo(),i=u,s=m=p,a=g,y=_;break;case f:k.test(u.tagName)&&t.activeElement!==u&&e.preventDefault(),v=p-m,E=_-T,ae.setScrollTop($e-v,!0),m=p,T=_;break;default:case d:case h:var o=s-p,w=a-g,b=w*w+o*o;if(49>b){if(!k.test(i.tagName)){i.focus();var C=t.createEvent("MouseEvents");C.initMouseEvent("click",!0,!0,e.view,1,r.screenX,r.screenY,r.clientX,r.clientY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,0,null),i.dispatchEvent(C)}return}i=n;var x=v/E;x=l.max(l.min(x,3),-3);var A=l.abs(x/he),S=x*A+.5*he*A*A,D=ae.getScrollTop()-S,I=0;D>je?(I=(je-D)/S,D=je):0>D&&(I=-D/S,D=0),A*=1-I,ae.animateTo(D+.5|0,{easing:"outCubic",duration:A})}}),e.scrollTo(0,0),r.style.overflow=o.style.overflow="hidden"},X=function(){var e,t,n,i,o,s,a,u,c,f,d,h=r.clientHeight,p=Se();for(u=0,c=le.length;c>u;u++)for(e=le[u],t=e.element,n=e.anchorTarget,i=e.keyFrames,o=0,s=i.length;s>o;o++)a=i[o],f=a.offset,d=p[a.constant]||0,a.frame=f,a.isPercentage&&(f*=h,a.frame=f),"relative"===a.mode&&(oe(t),a.frame=ae.relativeToAbsolute(n,a.anchors[0],a.anchors[1])-f,oe(t,!0)),a.frame+=d,fe&&!a.isEnd&&a.frame>je&&(je=a.frame);for(je=l.max(je,De()),u=0,c=le.length;c>u;u++){for(e=le[u],i=e.keyFrames,o=0,s=i.length;s>o;o++)a=i[o],d=p[a.constant]||0,a.isEnd&&(a.frame=je-a.offset+d);e.keyFrames.sort(He)}},Y=function(e,t){for(var n=0,i=le.length;i>n;n++){var r,o,l=le[n],u=l.element,c=l.smoothScrolling?e:t,f=l.keyFrames,d=f.length,h=f[0],y=f[f.length-1],_=c<h.frame,T=c>y.frame,E=_?h:y,w=l.emitEvents,b=l.lastFrameIndex;if(_||T){if(_&&-1===l.edge||T&&1===l.edge)continue;switch(_?(Oe(u,[g],[v,m]),w&&b>-1&&(xe(u,h.eventType,Re),l.lastFrameIndex=-1)):(Oe(u,[v],[g,m]),w&&d>b&&(xe(u,y.eventType,Re),l.lastFrameIndex=d)),l.edge=_?-1:1,l.edgeStrategy){case"reset":oe(u);continue;case"ease":c=E.frame;break;default:case"set":var C=E.props;for(r in C)a.call(C,r)&&(o=re(C[r].value),0===r.indexOf("@")?u.setAttribute(r.substr(1),o):s.setStyle(u,r,o));continue}}else 0!==l.edge&&(Oe(u,[p,m],[g,v]),l.edge=0);for(var x=0;d-1>x;x++)if(c>=f[x].frame&&c<=f[x+1].frame){var A=f[x],S=f[x+1];for(r in A.props)if(a.call(A.props,r)){var D=(c-A.frame)/(S.frame-A.frame);D=A.props[r].easing(D),o=ie(A.props[r].value,S.props[r].value,D),o=re(o),0===r.indexOf("@")?u.setAttribute(r.substr(1),o):s.setStyle(u,r,o)}w&&b!==x&&("down"===Re?xe(u,A.eventType,Re):xe(u,S.eventType,Re),l.lastFrameIndex=x);break}}},J=function(){Be&&(Be=!1,Ae());var e,t,i=ae.getScrollTop(),r=Le();if(pe)r>=pe.endTime?(i=pe.targetTop,e=pe.done,pe=n):(t=pe.easing((r-pe.startTime)/pe.duration),i=pe.startTop+t*pe.topDiff|0),ae.setScrollTop(i,!0);else if(!ye){var o=ve.targetTop-i;o&&(ve={startTop:We,topDiff:i-We,targetTop:i,startTime:Fe,endTime:Fe+me}),r<=ve.endTime&&(t=G.sqrt((r-ve.startTime)/me),i=ve.startTop+t*ve.topDiff|0)}if(ye||We!==i){Re=i>We?"down":We>i?"up":Re,ye=!1;var a={curTop:i,lastTop:We,maxTop:je,direction:Re},l=ce.beforerender&&ce.beforerender.call(ae,a);l!==!1&&(Y(i,ae.getScrollTop()),Ue&&ue&&s.setStyle(ue,"transform","translate(0, "+-$e+"px) "+Te),We=i,ce.render&&ce.render.call(ae,a)),e&&e.call(ae,!1)}Fe=r},Z=function(e){for(var t=0,n=e.keyFrames.length;n>t;t++){for(var i,r,o,s,a=e.keyFrames[t],l={};null!==(s=j.exec(a.props));)o=s[1],r=s[2],i=o.match(P),null!==i?(o=i[1],i=i[2]):i=w,r=r.indexOf("!")?ee(r):[r.slice(1)],l[o]={value:r,easing:G[i]};a.props=l}},ee=function(e){var t=[];return q.lastIndex=0,e=e.replace(q,function(e){return e.replace(F,function(e){return e/255*100+"%"})}),U&&(B.lastIndex=0,e=e.replace(B,function(e){return U+e})),e=e.replace(F,function(e){return t.push(+e),"{?}"}),t.unshift(e),t},te=function(e){var t,n,i={};for(t=0,n=e.keyFrames.length;n>t;t++)ne(e.keyFrames[t],i);for(i={},t=e.keyFrames.length-1;t>=0;t--)ne(e.keyFrames[t],i)},ne=function(e,t){var n;for(n in t)a.call(e.props,n)||(e.props[n]=t[n]);for(n in e.props)t[n]=e.props[n]},ie=function(e,t,n){var i,r=e.length;if(r!==t.length)throw"Can't interpolate between \""+e[0]+'" and "'+t[0]+'"';var o=[e[0]];for(i=1;r>i;i++)o[i]=e[i]+(t[i]-e[i])*n;return o},re=function(e){var t=1;return M.lastIndex=0,e[0].replace(M,function(){return e[t++]})},oe=function(e,t){e=[].concat(e);for(var n,i,r=0,o=e.length;o>r;r++)i=e[r],n=le[i[N]],n&&(t?(i.style.cssText=n.dirtyStyleAttr,Oe(i,n.dirtyClassAttr)):(n.dirtyStyleAttr=i.style.cssText,n.dirtyClassAttr=Ie(i),i.style.cssText=n.styleAttr,Oe(i,n.classAttr)))},se=function(){Te="translateZ(0)",s.setStyle(ue,"transform",Te);var e=u(ue),t=e.getPropertyValue("transform"),n=e.getPropertyValue(U+"transform"),i=t&&"none"!==t||n&&"none"!==n;i||(Te="")};s.setStyle=function(e,t,n){var i=e.style;if(t=t.replace(R,W).replace("-",""),"zIndex"===t)isNaN(n)?i[t]=n:i[t]=""+(0|n);else if("float"===t)i.styleFloat=i.cssFloat=n;else try{V&&(i[V+t.slice(0,1).toUpperCase()+t.slice(1)]=n),i[t]=n}catch(r){}};var ae,le,ue,ce,fe,de,he,pe,ge,me,ve,ye,_e,Te,Ee,we=s.addEvent=function(t,n,i){var r=function(t){return t=t||e.event,t.target||(t.target=t.srcElement),t.preventDefault||(t.preventDefault=function(){t.returnValue=!1,t.defaultPrevented=!0}),i.call(this,t)};n=n.split(" ");for(var o,s=0,a=n.length;a>s;s++)o=n[s],t.addEventListener?t.addEventListener(o,i,!1):t.attachEvent("on"+o,r),Qe.push({element:t,name:o,listener:i})},be=s.removeEvent=function(e,t,n){t=t.split(" ");for(var i=0,r=t.length;r>i;i++)e.removeEventListener?e.removeEventListener(t[i],n,!1):e.detachEvent("on"+t[i],n)},Ce=function(){for(var e,t=0,n=Qe.length;n>t;t++)e=Qe[t],be(e.element,e.name,e.listener);Qe=[]},xe=function(e,t,n){ce.keyframe&&ce.keyframe.call(ae,e,t,n)},Ae=function(){var e=ae.getScrollTop();je=0,fe&&!Ue&&(o.style.height=""),X(),fe&&!Ue&&(o.style.height=je+r.clientHeight+"px"),Ue?ae.setScrollTop(l.min(ae.getScrollTop(),je)):ae.setScrollTop(e,!0),ye=!0},Se=function(){var e,t,n=r.clientHeight,i={};for(e in de)t=de[e],"function"==typeof t?t=t.call(ae):/p$/.test(t)&&(t=t.slice(0,-1)/100*n),i[e]=t;return i},De=function(){var e,t=0;return ue&&(t=l.max(ue.offsetHeight,ue.scrollHeight)),e=l.max(t,o.scrollHeight,o.offsetHeight,r.scrollHeight,r.offsetHeight,r.clientHeight),e-r.clientHeight},Ie=function(t){var n="className";return e.SVGElement&&t instanceof e.SVGElement&&(t=t[n],n="baseVal"),t[n]},Oe=function(t,i,r){var o="className";if(e.SVGElement&&t instanceof e.SVGElement&&(t=t[o],o="baseVal"),r===n)return void(t[o]=i);for(var s=t[o],a=0,l=r.length;l>a;a++)s=ke(s).replace(ke(r[a])," ");s=Ne(s);for(var u=0,c=i.length;c>u;u++)-1===ke(s).indexOf(ke(i[u]))&&(s+=" "+i[u]);t[o]=Ne(s)},Ne=function(e){return e.replace(L,"")},ke=function(e){return" "+e+" "},Le=Date.now||function(){return+new Date},He=function(e,t){return e.frame-t.frame},je=0,Pe=1,Re="down",We=-1,Fe=Le(),Me=0,qe=0,Be=!1,Ve=0,Ue=!1,$e=0,Qe=[];"function"==typeof define&&define.amd?define([],function(){return s}):"undefined"!=typeof module&&module.exports?module.exports=s:e.skrollr=s}(window,document),$.fn.accordion=function(){var e=$(this).find(".item");e.each(function(t,n){var i=$(n),r=i.find(".title"),o=i.find(".content");r.click(function(t){$(t.target).data("modal")||(e.not(i).removeClass("active"),e.not(i).find(".content").each(function(e,t){$(t).stop().animate({height:0},300)}),i.hasClass("active")?(i.removeClass("active"),o.stop().animate({height:0},300)):(i.addClass("active"),o.stop().animate({height:o.actualSize().height},300)))})})},$.fn.actualSize=function(){var e=$(this).attr("style");$(this).css({position:"absolute",visibility:"hidden",height:"auto",width:"auto",display:"block"});var t={width:$(this).width(),cssWidth:parseFloat($(this).css("width")),outerWidth:$(this).outerWidth(),innerWidth:$(this).innerWidth(),height:$(this).height(),cssHeight:parseFloat($(this).css("height")),outerHeight:$(this).outerHeight(),innerHeight:$(this).innerHeight()};return $(this).attr("style",e?e:""),t},$(document).ready(function(){function e(e){$.post(e[0].action,e.serialize()).then(function(t){e[0].reset(),e.find(".success").html(t).slideDown()}).fail(function(t){e.find(".error").html(t.responseText).slideDown()}).done(function(){e.find("button").removeClass("disabled")})}$("#read-more").click(function(e){e.preventDefault(),$("html, body").stop().animate({scrollTop:$(".pitch").offset().top-59},500)}),$(".nav .button").click(function(e){e.preventDefault(),$(".nav ul").toggleClass("active")}),"/tele10-molnvaxel"==window.location.pathname&&$('.nav [href="/tele10-molnvaxel#mobile"]').click(function(e){e.preventDefault(),$(".nav ul").removeClass("active"),$("html, body").stop().animate({scrollTop:$("#mobile").offset().top-59},500)}),$(".nav .item").not(".dropdown").click(function(e){if(!$(e.target).is("a")){var t=$(this).find("a").attr("href");window.location.href=t}}),$(".contact form").submit(function(t){t.preventDefault();var n=$(t.target).find(".success:visible, .error:visible");$(this).find("button").addClass("disabled"),n.length?n.slideUp().promise().then(function(){e($(t.target))}):e($(t.target))}),$(".accordion").accordion()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
